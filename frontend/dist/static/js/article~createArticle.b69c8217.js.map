{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/directives/click-outside/index.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/mixins/dependent/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/directives/resize/index.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts"],"names":["name","props","openDelay","type","Number","default","closeDelay","data","openTimeout","closeTimeout","undefined","methods","clearDelay","clearTimeout","this","runDelay","delay","parseInt","setTimeout","cb","open","close","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","content","$refs","index","getMaxZIndex","exclude","base","zis","activeElements","document","Math","delimiters","returnObject","editingIndex","computedCounterValue","multiple","selectedItems","internalSearch","hasSlot","isAnyValueAllowed","menuCanShow","hasDisplayedItems","$slots","onInternalSearchChanged","val","delimiter","find","d","genInput","input","genChipSelection","chip","dblclick","onChipInput","onEnterDown","e","getMenuIndex","onFilteredItemsChanged","onKeyDown","keyCode","selectionStart","onTabDown","selectItem","setSelectedItems","internalValue","setValue","value","updateEditing","updateCombobox","isUsingSlot","Boolean","$scopedSlots","getText","updateSelf","updateTags","menuIndex","indexOf","onPaste","pastedItemText","event","findExistingIndex","root","isDark","render","node","baseMixins","activator","validator","includes","disabled","internalActivator","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","beforeDestroy","addActivatorEvents","keys","Object","key","genActivator","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","valueComparator","$","getOwnPropertyDescriptor","f","toLength","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","nativeEndsWith","endsWith","min","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","prototype","writable","proto","forced","searchString","that","endPosition","arguments","len","end","search","call","slice","VCardActions","VCardSubtitle","VCardText","VCardTitle","defaultConditional","directive","handler","binding","elements","el","ClickOutside","inserted","onClick","app","unbind","autoGrow","noResize","rowHeight","v","isNaN","parseFloat","rows","classes","noResizeHandle","lazyValue","$nextTick","calculateInputHeight","height","minHeight","onInput","isFocused","searchChildren","results","children","child","closeDependents","isDependent","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","overlay","functional","directives","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","h","staticClass","center","icon","VIcon","dark","light","mergeData","class","click","mixins","inset","themeClasses","$listeners","action","dense","hideSelected","items","itemDisabled","itemText","itemValue","noDataText","noFilter","searchInput","parsedItems","map","item","tileActiveClass","setTextColor","staticNoDataTile","tile","mousedown","$createElement","VListItem","genTileContent","genAction","VListItemAction","color","inputValue","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","start","genHighlight","middle","genHeader","genTile","hasItem","getDisabled","id","_uid","activeClass","parent","scopedSlot","needsTile","innerHTML","VList","domProps","getValue","slot","itemsLength","tabindex","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","appendIcon","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","openOnClear","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","closeConditional","dynamicHeight","hasChips","isDirty","listData","$vnode","context","$vuetify","lang","t","select","scopedSlots","staticList","VSelectList","virtualizedItems","$_menuProps","normalisedProps","split","acc","p","nudgeBottom","immediate","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","i","menu","isDisabled","VChip","small","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","readonly","autocomplete","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelections","genSelection","genSlotSelection","selection","selected","isInteractive","onBlur","$emit","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","isReadonly","onUpDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","values","oldValue","appendInner","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","queryText","hideNoData","lazySearch","selectedValues","filteredItems","some","currentRange","selectedItem","get","set","searchIsDirty","isSearching","oldVal","created","destroyed","updateMenuDimensions","changeSelectedIndex","deleteCurrentItem","curIndex","curItem","lastIndex","nextIndex","nextItem","setSearch","onCopy","currentItem","currentItemText","active","chipGroup","closeIcon","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","breakingProps","original","replacement","genFilter","left","genClose","right","size","genContent","setBackgroundColor","vertical","$attrs","orientation","callback","options","passive","Resize","maxWidth","minWidth","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","bottom","width","offsetTop","offsetLeft","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","computedTop","hasActivator","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","deactivate","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","startTransition","Promise","resolve","updateDimensions","provide","isInMenu","theme","auto","offsetX","origin","calculatedTopAuto","defaultOffset","resizeTimeout","tiles","calculatedLeft","menuWidth","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","styles","transformOrigin","next","prev","classList","remove","hasOwnProperty","calcScrollPosition","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","attributes","genTransition","genDirectives","include","menuable__content__active","keydown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","onResize","arg","showLazyContent","returnValue","originalValue","save"],"mappings":"mMASe,oCAAkD,CAC/DA,KAD+D,YAG/DC,MAAO,CACLC,UAAW,CACTC,KAAM,CAACC,OADE,QAETC,QAAS,GAEXC,WAAY,CACVH,KAAM,CAACC,OADG,QAEVC,QAAS,IAIbE,KAAM,iBAAO,CACXC,iBADW,EAEXC,kBAAcC,IAGhBC,QAAS,CAIPC,WAJO,WAKLC,aAAaC,KAAb,aACAD,aAAaC,KAAb,eAKFC,SAXO,SAWC,KAAyC,WAC/CD,KAAA,aAEA,IAAME,EAAQC,SAAUH,KAAA,UAAF,EAAE,UAAxB,IAEEA,KAAA,wBAAiCI,WAAWC,GAAO,WACnD,WAAgB,CAAEC,MAAF,EAAcC,OAAO,GAArC,IADA,Q,0GCjCO,oCAA6B,CAC1CrB,KAD0C,YAG1CO,KAH0C,WAIxC,MAAO,CACLe,aADK,KAELC,aAFK,KAGLC,eAHK,EAILC,UAAU,IAGdC,SAAU,CACRC,aADQ,WAEN,wBAAWC,OAAwB,OAAO,EAE1C,IAAMC,EAAUf,KAAKQ,cAAgBR,KAAKgB,MAHhC,QAMJC,EAASjB,KAAD,SAEVA,KAAKkB,aAAalB,KAAKS,cAAgB,CAAvC,IAFJ,EACI,eADU,GAId,aAAIQ,EAVM,EAcHd,SAAP,KAGJN,QAAS,CACPqB,aADO,WAeL,IAdmC,IAAvBC,EAAuB,uDAAzB,GACJC,EAAOpB,KADsB,IAI7BqB,EAAM,CAACrB,KAAD,eAAsB,eAJC,IAQ7BsB,EAAiB,GAAH,sBACfC,SAAA,uBADkB,4BAAH,eAEfA,SAAA,uBAV8B,+BAc1BN,EAAT,EAAoBA,EAAQK,EAA5B,OAAmDL,IAC5CE,EAAA,SAAiBG,EAAtB,KACED,EAAA,KAAS,eAAUC,EAAnB,KAIJ,OAAOE,KAAA,UAAAA,KAAP,Q,oLC/CS,qBAAqB,CAClCtC,KADkC,aAGlCC,MAAO,CACLsC,WAAY,CACVpC,KADU,MAEVE,QAAS,iBAAO,KAElBmC,aAAc,CACZrC,KADY,QAEZE,SAAS,IAIbE,KAAM,iBAAO,CACXkC,cAAe,IAGjBf,SAAU,CACRgB,qBADQ,WAEN,OAAO5B,KAAK6B,SACR7B,KAAK8B,cADF,QAEF9B,KAAK+B,gBAAN,eAFJ,QAIFC,QANQ,WAON,OAAO,4CAA+ChC,KAAtD,UAEFiC,kBATQ,WAUN,UAEFC,YAZQ,WAaN,QAAKlC,KAAL,YAEOA,KAAKmC,qBACPnC,KAAKoC,OAAP,aAA6BpC,KADhC,cAKJH,QAAS,CACPwC,wBADO,SACgB,GACrB,GACEC,GACAtC,KADA,UAEAA,KAAKyB,WAHP,OAIE,CACA,IAAMc,EAAYvC,KAAKyB,WAAWe,MAAK,SAAAC,GAAC,OAAIH,EAAA,SAA5C,MACA,MAAIC,IACFvC,KAAA,eAAsBsC,EAAA,QAAaA,EAAA,OAAaC,EAAhD,QACAvC,KAAA,cAIJA,KAAA,wBAEF0C,SAhBO,WAiBL,IAAMC,EAAQ,qCAAd,MAKA,cAHOA,EAAA,WAAP,KACAA,EAAA,cAAwB3C,KAAxB,QAEA,GAEF4C,iBAxBO,SAwBS,KAA6B,WACrCC,EAAO,oDAD8B,GAe3C,OAXI7C,KAAJ,WACE6C,EAAA,4DACKA,EAAA,iBAD+B,WAApC,IAEEC,SAAU,WACR,iBACA,iBAAsB,UAAtB,GACA,uBAKN,GAEFC,YAzCO,SAyCI,GACT,gDAEA/C,KAAA,iBAIFgD,YAhDO,SAgDI,GACTC,EADmB,iBAGfjD,KAAKkD,gBAAT,GAEAlD,KAAA,UAAeA,KAAf,aAEFmD,uBAvDO,SAuDe,KACfnD,KAAL,iBAEA,8DAEFoD,UA5DO,SA4DE,GACP,IAAMC,EAAUJ,EAAhB,QAEA,2CAHyB,GAOrBjD,KAAK6B,UACPwB,IAAY,OADV,MAAJ,IAEErD,KAAKgB,MAAM2B,MAAMW,eAEjBtD,KAAA,aACSqD,IAAY,OAAhB,OACLrD,KAAA,eAOFA,KAAA,wBAEFuD,UAlFO,SAkFE,GAIP,GAAIvD,KAAK6B,UACP7B,KADE,iBAAJ,IAEEA,KAAKkD,eAKL,OAHAD,EAAA,iBACAA,EAAA,kBAEOjD,KAAP,aAGF,+CAEFwD,WAlGO,SAkGG,GAEJxD,KAAK2B,cAAT,EACE3B,KAAA,gBAEA,gDAGJyD,iBA1GO,WA2GqB,MAAtBzD,KAAK0D,eAAT,KACE1D,KAAK0D,cAEL1D,KAAA,iBAEAA,KAAA,cAAqBA,KAAK6B,SAAW7B,KAAhB,cAAqC,CAACA,KAA3D,gBAGJ2D,SAnHO,SAmHC,GACN,0CAA4C,MAAAC,IAAwB5D,KAApE,iBAEF6D,cAtHO,WAuHL,IAAMD,EAAQ5D,KAAK0D,cAAnB,QACAE,EAAM5D,KAAN,cAA2BA,KAA3B,eAEAA,KAAA,YAEAA,KAAA,iBAEF8D,eA9HO,WA+HL,IAAMC,EAAcC,QAAQhE,KAAKiE,aAAb,YAAwCjE,KADhD,SAKR+D,IAAgB/D,KAApB,gBAIIA,KAAK+B,iBAAmB/B,KAAKkE,QAAQlE,KAAzC,gBAA8DA,KATlD,WAaZ,IAAiBA,KAAK+B,oBAAiBnC,KAEzCuE,WA7IO,WA8ILnE,KAAA,SAAgBA,KAAhB,aAAoCA,KAApC,kBAEFoE,WAhJO,WAiJL,IAAMC,EAAYrE,KADV,eAMR,KAAIqE,EAAA,IACDrE,KADH,eAIA,GAAIA,KAAK2B,cAAT,EACE,OAAO3B,KAAP,gBAGF,IAAMiB,EAAQjB,KAAK8B,cAAcwC,QAAQtE,KAdjC,gBAkBR,GAAIiB,GAAJ,EAAgB,CACd,IAAMyC,EAAgB1D,KAAK0D,cAA3B,QACAA,EAAA,YAEA1D,KAAA,YAMF,GAAIqE,GAAJ,EAAoB,OAAQrE,KAAK+B,eAAb,KAEpB/B,KAAA,WAAgBA,KAAhB,gBACAA,KAAA,sBAEFuE,QAjLO,SAiLA,GACL,GAAKvE,KAAD,WAAkBA,KAAtB,eAEA,IAAMwE,EAAiBC,EAAA,sBAAvB,4CACID,IAAJ,IAAsBxE,KAAK0E,kBAAkBF,KAC3CC,EAAA,iBACA,sD,6DC3OR,gBAGA,e,oCCHA,gBAGA,e,8DCIe,qBAAiB,CAC9BvF,KAD8B,mBAG9BC,MAAO,CAAEwF,KAAMX,SAEfpD,SAAU,CACRgE,OADQ,WAEN,OAAO5E,KAAK2E,KACR3E,KADG,WAEH,oCAFJ,QAMJ6E,OAb8B,WAe5B,OACE7E,KAAKoC,OAAO7C,SACZS,KAAKoC,OAAO7C,QAAZ,MAA0B,SAAAuF,GAAI,OAAKA,EAAD,WAFpC,MAEuDA,EAAA,Y,wJCVrDC,EAAa,eAAO,EAAD,KAAzB,QAMe,OAAAA,EAAA,OAAkB,CAC/B7F,KAD+B,cAG/BC,MAAO,CACL6F,UAAW,CACTzF,QADS,KAET0F,UAAY,SAAA3C,GACV,MAAO,CAAC,SAAU,UAAU4C,SAAS,OAA9B,OAA8B,CAArC,MAGJC,SAPK,QAQLC,kBARK,QASLC,YATK,QAULC,YAAatB,SAGfvE,KAAM,iBAAO,CAEX8F,iBAFW,KAGXC,cAHW,GAIXC,OAAQ,CAAC,QAAS,aAAc,aAJrB,SAKXC,UAAW,KAGbC,MAAO,CACLX,UADK,iBAELM,YAFK,iBAGLD,YAAa,kBAGfO,QA9B+B,WA+B7B,IAAMC,EAAW,eAAY7F,KAAM,aAAnC,GAEI6F,GAAY,CAAC,SAAU,UAAUX,SAArC,IACE,eAAa,kGAAb,MAGFlF,KAAA,sBAGF8F,cAxC+B,WAyC7B9F,KAAA,yBAGFH,QAAS,CACPkG,mBADO,WAEL,GACG/F,KAAD,YACAA,KADA,UAECA,KAHH,gBAMAA,KAAA,UAAiBA,KAAjB,wBAGA,IAFA,IAAMgG,EAAOC,OAAA,KAAYjG,KAAzB,WAEA,uBAAwB,CAAnB,IAAMkG,EAAX,KACElG,KAAA,kCAA2CA,KAAK0F,UAAhD,OAGJS,aAfO,WAgBL,IAAMrB,EAAO,eAAQ9E,KAAM,YAAaiG,OAAA,OAAcjG,KAAd,gBAAoC,CAC1EoG,GAAIpG,KADsE,wBAE1EqG,MAAOrG,KAAKsG,6BAFd,GAOA,OAFAtG,KAAA,gBAEA,GAEFsG,uBAzBO,WA0BL,MAAO,CACLC,KADK,SAEL,iBAFK,EAGL,gBAAiBC,OAAOxG,KAAD,YAG3ByG,sBAhCO,WAgCc,WACnB,GAAIzG,KAAJ,SAAmB,MAAO,GAE1B,IAAM0F,EAAN,GAgCA,OA9BI1F,KAAJ,aACE0F,EAAA,WAAwB,SAAAzC,GACtB,kBACA,oBAEFyC,EAAA,WAAwB,SAAAzC,GACtB,kBACA,sBAGFyC,EAAA,MAAmB,SAAAzC,GACjB,IAAM+B,EAAY,eAAlB,GACA,GAAeA,EAAA,QAEf/B,EAAA,kBAEA,YAAiB,EAAjB,UAIAjD,KAAJ,cACE0F,EAAA,MAAmB,SAAAzC,GACjB,kBAEAA,EAAA,kBAEA,YAAiB,EAAjB,WAIJ,GAEFyD,aArEO,SAqEK,GAEV,GAAI1G,KAAJ,iBAA2B,OAAOA,KAAP,iBAE3B,IAAIgF,EAAJ,KAEA,GAAIhF,KAAJ,UAAoB,CAClB,IAAM2G,EAAS3G,KAAKoF,kBAAoBpF,KAAzB,IAAf,SAIEgF,EAFF,kBAAWhF,KAAP,UAEU2G,EAAA,cAAqB3G,KAAjCgF,WACUhF,KAAKgF,UAAV,IAEQhF,KAAKgF,UAAlB,IAGYhF,KAAZgF,eAEG,GAAkC,IAA9BhF,KAAKwF,cAAcoB,QAAiB5G,KAAKwF,cAAcoB,SAA3D,EAA0E,CAI/E,IAAMC,EAAK7G,KAAKwF,cAAc,GAA9B,kBAOER,EALA6B,GACAA,EAAA,SADA,QAEAA,EAAA,sBAAyB,SAAAC,GAAD,OAAYA,EAAA,SAAa,CAAC,cAAe,YAAY5B,SAAS4B,EAAA,QAHxF,SAMeD,EAAb,eAEY7G,KAAKwF,cAAc,GAA/B,SAEOvC,IAET+B,EAAa/B,EAAA,eAAmBA,EAAhC,QAKF,OAFAjD,KAAA,mBAEOA,KAAP,kBAEF+G,eAhHO,WAiHL,OAAO,eAAQ/G,KAAM,UAAWA,KAAlB,iBAAd,IAEFgH,cAnHO,WAoHL,IAAMC,EAAN,KACA,MAAO,CACL,YACE,OAAOA,EAAP,UAEF,aACEA,EAAA,cAINC,sBA9HO,WA+HL,GACGlH,KAAD,WACCA,KAFH,kBAOA,IAFA,IAAMgG,EAAOC,OAAA,KAAYjG,KAAzB,WAEA,uBAAwB,CAAnB,IAAMkG,EAAX,KACGlG,KAAA,uCAAuDA,KAAK0F,UAA5D,IAGH1F,KAAA,eAEFmH,eA5IO,WA6ILnH,KAAA,wBACAA,KAAA,sBACAA,KAAA,eACAA,KAAA,0B,6JC7LN,SAASoH,EAAT,GACE,IAAM/H,EAAO,eAAb,GAEA,MAAI,YAAAA,GAAJ,WAA0BA,GAEnBiD,EAAA,WAAiB+E,KAAxB,aAIa,qCAII,CACjBnI,KADiB,aAGjBC,MAAO,CACLmI,OAAQ,CACN/H,SADM,EAEN0F,UAAWmC,GAEbG,aAAc,CACZlI,KADY,OAEZE,QAAS,KAIbE,KAAM,iBAAO,CACX+F,cADW,KAEXgC,aAAa,IAGf7B,MAAO,CACL2B,OADK,WAEHtH,KAAA,eACAA,KAAA,cAEFyH,WALK,WAMHzH,KAAA,UAAeA,KAAf,cAIJ0H,YA7BiB,WA6BN,WACT1H,KAAA,WAAe,WACb,GAAI,EAAJ,cAAwB,CACtB,IAAMgF,EAAY2C,MAAA,QAAc,EAAd,eAAoC,EAApC,cAAyD,CAAC,EAA5E,eAEA3C,EAAA,SAAkB,SAAAF,GAChB,GAAKA,EAAL,KACK,MAAL,YAEA,IAAM6B,EAAS,QAAa,iBAAb,WACX,EADW,IAEX,MAFJ,YAIA,8BAAiC7B,EAAjC,gBAMRc,QAhDiB,WAiDf5F,KAAA,YAAmBA,KAAnB,cAGF4H,YApDiB,WAqDf5H,KAAA,aAGF8F,cAxDiB,WA0Df,IAQE,GANE9F,KAAKgB,MAAMD,SACXf,KAAKgB,MAAMD,QAFb,YAIEf,KAAA,qCAA0CA,KAAKgB,MAA/C,SAGEhB,KAAJ,cAAwB,CACtB,IAAMgF,EAAY2C,MAAA,QAAc3H,KAAd,eAAoCA,KAApC,cAAyD,CAACA,KAA5E,eACAgF,EAAA,SAAkB,SAAAF,GAChBA,EAAA,KACEA,EAAA,IADF,YAEEA,EAAA,2BAAgCA,EAFlC,SAKJ,MAAO7B,GAAK4E,QAAA,SAGhBhI,QAAS,CACPiI,gBADO,WAEL,IAAMC,EAAU,eAAqB/H,KAAD,OAApC,6BAEA,OAAO+H,GAAW,kBAChB,EAAW,KAGfC,WARO,WAmBL,MAVIhI,KAAKiI,eACNjI,KAAKgB,MADJ,SAEFhB,KAFE,kBAKFA,KAAA,SALE,IAMFA,KAAA,QANF,WAOEA,KAAA,SAMA2G,GAFF,IAAI3G,KAAKsH,OAEE/F,SAAA,cAAT,cACK,kBAAWvB,KAAP,OAEAuB,SAAA,cAAuBvB,KAAhC,QAGSA,KAAT,OAGF,GAKA2G,EAAA,YAAmB3G,KAAKgB,MAAxB,SAEAhB,KAAA,gBANE,eAAY,2BAAD,OAA4BA,KAAKsH,QAAjC,cAAX,Y,kCC7IR,4BAGe,2BAAW,CACxBpI,KADwB,aAExBC,MAAO,CACL+I,gBAAiB,CACf7I,KADe,SAEfE,QAAS,Y,oCCPf,IAAI4I,EAAI,EAAQ,QACZC,EAA2B,EAAQ,QAAmDC,EACtFC,EAAW,EAAQ,QACnBC,EAAa,EAAQ,QACrBC,EAAyB,EAAQ,QACjCC,EAAuB,EAAQ,QAC/BC,EAAU,EAAQ,QAElBC,EAAiB,GAAGC,SACpBC,EAAMrH,KAAKqH,IAEXC,EAA0BL,EAAqB,YAE/CM,GAAoBL,IAAYI,KAA6B,WAC/D,IAAIE,EAAaZ,EAAyB5B,OAAOyC,UAAW,YAC5D,OAAOD,IAAeA,EAAWE,SAF8B,GAOjEf,EAAE,CAAExB,OAAQ,SAAUwC,OAAO,EAAMC,QAASL,IAAqBD,GAA2B,CAC1FF,SAAU,SAAkBS,GAC1B,IAAIC,EAAO9C,OAAOgC,EAAuBxI,OACzCuI,EAAWc,GACX,IAAIE,EAAcC,UAAU5C,OAAS,EAAI4C,UAAU,QAAK5J,EACpD6J,EAAMnB,EAASgB,EAAK1C,QACpB8C,OAAsB9J,IAAhB2J,EAA4BE,EAAMZ,EAAIP,EAASiB,GAAcE,GACnEE,EAASnD,OAAO6C,GACpB,OAAOV,EACHA,EAAeiB,KAAKN,EAAMK,EAAQD,GAClCJ,EAAKO,MAAMH,EAAMC,EAAO/C,OAAQ8C,KAASC,M,sFC/BjD,oKAGMG,EAAe,eAArB,mBACMC,EAAgB,eAAtB,oBACMC,EAAY,eAAlB,gBACMC,EAAa,eAAnB,iBAYI,Q,4DCNJ,SAASC,IACP,SAGF,SAASC,EAAT,OACE,IAAMC,EAAU,oBAAOC,EAAP,MAAsCA,EAAtC,MAAsDA,EAAA,MAAtE,QAEM1J,EAAY,0BAAO0J,EAAP,QAAqCA,EAAA,MAAtC,kBAHiE,EASlF,GAAKpH,IAAL,IAAUtC,EAAA,MAOL,cAAesC,IAAMA,EAAtB,WACD,gBAAiBA,IAAMA,EAD1B,cAMA,IAAMqH,GAAa,0BAAOD,EAAP,QAAqCA,EAAA,MAAtC,SAAiE,iBAtBD,OAwBlFC,EAAA,KAxBkF,IA+BjFA,EAAA,MAAc,SAAAC,GAAE,OAAIA,EAAA,SAAYtH,EAAjC,YAAuD7C,YAAW,WAChEO,EAAA,OAA0ByJ,EAA1B,KADF,IAKK,IAAMI,EAAe,CAM1BC,SAN0B,SAMlB,KACN,IAAMC,EAAW,SAAAzH,GAAD,OAAckH,EAAUlH,EAAD,EADgB,IAKjD0H,EAAMpJ,SAAA,6BACVA,SANqD,KAOvDoJ,EAAA,+BACAJ,EAAA,iBAGFK,OAjB0B,SAiBpB,GACJ,GAAKL,EAAL,eAEA,IAAMI,EAAMpJ,SAAA,6BACVA,SAJmB,KAKrBoJ,GAAOA,EAAA,4BAAiCJ,EAAjC,eAAP,UACOA,EAAP,iBAIJ,U,gGC7DMxF,EAAa,eAAnB,QAOe,OAAAA,EAAA,OAAkB,CAC/B7F,KAD+B,aAG/BC,MAAO,CACL0L,SADK,QAELC,SAFK,QAGLC,UAAW,CACT1L,KAAM,CAACC,OADE,QAETC,QAFS,GAGT0F,UAAY,SAAA+F,GAAD,OAAaC,MAAMC,WAAD,MAE/BC,KAAM,CACJ9L,KAAM,CAACC,OADH,QAEJC,QAFI,EAGJ0F,UAAY,SAAA+F,GAAD,OAAaC,MAAM9K,SAAS6K,EAAV,QAIjCpK,SAAU,CACRwK,QADQ,WAEN,uBACE,cADK,EAEL,wBAAyBpL,KAFpB,SAGL,wBAAyBA,KAHpB,gBAIF,6CAGPqL,eATQ,WAUN,OAAOrL,KAAK8K,UAAY9K,KAAxB,WAIJ2F,MAAO,CACL2F,UADK,WAEHtL,KAAA,UAAiBA,KAAKuL,UAAUvL,KAAhC,uBAEF+K,UAJK,WAKH/K,KAAA,UAAiBA,KAAKuL,UAAUvL,KAAhC,wBAIJ4F,QAzC+B,WAyCxB,WACLxF,YAAW,WACT,YAAiB,EAAjB,yBADF,IAKFP,QAAS,CACP2L,qBADO,WAEL,IAAM7I,EAAQ3C,KAAKgB,MAAnB,MACA,MAEA2B,EAAA,iBACA,IAAM8I,EAAS9I,EAAf,aACM+I,EAAYvL,SAASH,KAAD,KAAR,IAA0BkL,WAAWlL,KANrC,WASlB2C,EAAA,aAAqBnB,KAAA,SAArB,OAEFkB,SAZO,WAaL,IAAMC,EAAQ,qCAAd,MAMA,OAJAA,EAAA,sBACOA,EAAA,WAAP,KACAA,EAAA,gBAA0B3C,KAA1B,KAEA,GAEF2L,QArBO,SAqBA,GACL,4CACA3L,KAAA,UAAiBA,KAAjB,wBAEFoD,UAzBO,SAyBE,GAIHpD,KAAK4L,WAAT,KAAsB3I,EAAA,SACpBA,EAAA,kBAGFjD,KAAA,wB,kCCzGN,gBAGA,e,8DCeA,SAAS6L,EAAT,GAEE,IADA,IAAMC,EAAN,GACS7K,EAAT,EAAoBA,EAAQ8K,EAA5B,OAA6C9K,IAAS,CACpD,IAAM+K,EAAQD,EAAd,GACIC,EAAA,UAAkBA,EAAtB,YACEF,EAAA,QAEAA,EAAA,WAAAA,EAAO,eAASD,EAAeG,EAA/B,aAIJ,SAIa,+BAAyB,CACtC9M,KADsC,YAGtCO,KAHsC,WAIpC,MAAO,CACLwM,iBADK,EAELtL,UAFK,EAGLuL,aAAa,IAIjBvG,MAAO,CACLhF,SADK,SACG,GACN,MAGA,IADA,IAAMwL,EAAiBnM,KAAvB,oBACSiB,EAAT,EAAoBA,EAAQkL,EAA5B,OAAmDlL,IACjDkL,EAAA,iBAKNtM,QAAS,CACPuM,kBADO,WAEL,OAAIpM,KAAJ,gBAAiC6L,EAAe7L,KAAtB,WAE1B,IAEFqM,yBANO,WAUL,IAHA,IAAMC,EAAN,GACMH,EAAiBnM,KAAvB,oBAESiB,EAAT,EAAoBA,EAAQkL,EAA5B,OAAmDlL,IACjDqL,EAAA,WAAAA,EAAM,eAASH,EAAA,GAAf,kCAGF,UAEFI,8BAhBO,WAiBL,IAAMD,EAAS,CAACtM,KAAhB,KAKA,OAJIA,KAAKgB,MAAT,SAAwBsL,EAAA,KAAYtM,KAAKgB,MAAjB,SACpBhB,KAAJ,SAAkBsM,EAAA,KAAYtM,KAAKwM,QAAjB,KAClBF,EAAA,WAAAA,EAAM,eAAStM,KAAf,6BAEA,O,ofC9DS,sBAAW,CACxBd,KADwB,oBAGxBuN,YAHwB,EAKxBC,WAAY,CACVC,SAAA,MAGFxN,MAAO,gDACF,eADE,OAEF,eAFE,OAAF,IAGHgG,SAHK,QAILwH,OAAQ,CACNtN,KADM,QAENE,SAAS,GAEXqE,MARK,QASLgJ,cATK,QAULC,kBAAmB,CACjBxN,KADiB,OAEjBE,QAAS,0BAEXuN,OAAQ,CACNzN,KADM,OAENE,QAAS,eAEXwN,QAAS,CACP1N,KADO,OAEPE,QAAS,kBAIbsF,OAjCwB,SAiClB,EAjCkB,GAiCa,IAA1B,EAA0B,EAA1B,QAA0B,EAA1B,KACHkH,GAD6B,EAAXrG,UACxB,IAEA,GAAIvG,EAAA,SAAiBA,EAArB,SAAqC,CACnC,IAAM,EAAS6N,EAAE,MAAO,oCAAuC7N,EAAvC,MAAoD,CAC1E8N,YAD0E,sCAE1EP,WAAY,CAAC,CACXxN,KADW,SAEX0E,MAAO,CAAEsJ,QAAQ,QAIrBnB,EAAA,QAGF,IAAIoB,EAAOhO,EAAX,QACIA,EAAJ,cAAyBgO,EAAOhO,EAAhC,kBACSA,EAAJ,QAAiBgO,EAAOhO,EAAP,QAEtB4M,EAAA,KAAciB,EAAEI,EAAD,KAAQ,oCAAuCjO,EAAA,OAAeA,EAAtD,MAAmE,CACxFA,MAAO,CACLgG,SAAUhG,EADL,SAELkO,KAAMlO,EAFD,KAGLmO,MAAOnO,EAAMmO,SAJjB,IAQA,IAAMlC,EAAU,CACd,qBADc,EAEd,8BAA+BjM,EAAMgG,UAGvC,OAAO6H,EAAE,MACP,OAAAO,EAAA,MAAU9N,EAAM,CACd+N,MADc,EAEdpH,GAAI,CACFqH,MAAQ,SAAAxK,GACNA,EAAA,kBAEIxD,EAAA,IAAWA,EAAA,GAAX,QAA6BN,EAAjC,UACE,eAAYM,EAAA,GAAZ,gBAAmC,SAAA4I,GAAC,OAAIA,GAAGlJ,EAA3C,cARV,M,oCCtEW,SAAAuO,EAAA,MACb,QADa,OAGN,CACPxO,KADO,cAGPC,MAAO,CACLwO,MAAO3J,SAGTa,OAPO,SAOD,GACJ,OAAOmI,EAAE,MAAO,CACdC,YADc,cAEdO,MAAO,gBACL,qBAAsBxN,KADjB,OAEFA,KAAK4N,cAEVvH,MAAOrG,KANO,OAOdoG,GAAIpG,KAAK6N,YACR7N,KAAKoC,OARR,YClBJ,I,gDC8Be,SAAAsL,EAAA,MAAO,EAAD,KAAN,eAAoC,CACjDxO,KADiD,gBAIjDwN,WAAY,CACVC,SAAA,MAGFxN,MAAO,CACL2O,OADK,QAELC,MAFK,QAGLC,aAHK,QAILC,MAAO,CACL5O,KADK,MAELE,QAAS,iBAAM,KAEjB2O,aAAc,CACZ7O,KAAM,CAACmH,OAAQmB,MADH,UAEZpI,QAAS,YAEX4O,SAAU,CACR9O,KAAM,CAACmH,OAAQmB,MADP,UAERpI,QAAS,QAEX6O,UAAW,CACT/O,KAAM,CAACmH,OAAQmB,MADN,UAETpI,QAAS,SAEX8O,WApBK,OAqBLC,SArBK,QAsBLC,YAtBK,KAuBLzM,cAAe,CACbzC,KADa,MAEbE,QAAS,iBAAM,MAInBqB,SAAU,CACR4N,YADQ,WACG,WACT,OAAOxO,KAAK8B,cAAc2M,KAAI,SAAAC,GAAI,OAAI,WAAtC,OAEFC,gBAJQ,WAKN,OAAO1I,OAAA,KAAYjG,KAAK4O,aAAa5O,KAAlB,cAAZ,SAAP,MAEF6O,iBAPQ,WAQN,IAAMC,EAAO,CACXzI,MAAO,CACLE,UAAM3G,GAERwG,GAAI,CACF2I,UAAY,SAAA9L,GAAD,OAAcA,EAAA,oBAI7B,OAAOjD,KAAKgP,eAAeC,EAApB,OAAqC,CAC1CjP,KAAKkP,eAAelP,KADtB,gBAMJH,QAAS,CACPsP,UADO,SACE,KAA+B,WACtC,OAAOnP,KAAKgP,eAAeI,EAApB,KAAqC,CAC1CpP,KAAKgP,eAAe,EAAiB,CACnC7P,MAAO,CACLkQ,MAAOrP,KADF,MAEL4D,MAAO0L,GAETlJ,GAAI,CACFzD,MAAO,kBAAM,2BAKrB4M,WAdO,SAcG,GACR,OAAOvP,KAAKgP,eAAeQ,EAApB,KAA8B,CAAErQ,WAEzCsQ,gBAjBO,SAiBQ,GAGb,GAFAC,EAAOA,GAAP,IAEK1P,KAAD,aAAqBA,KAAzB,SAAwC,OAAO,eAAP,GAHb,MAKIA,KAAK2P,oBAApC,GAAM,EALqB,EAKrB,QALqB,EAKrB,OAAiBjG,EALI,EAKJA,IAEvB,gBAAU,eAAWkG,IAArB,OAA8B5P,KAAK6P,aAAaC,IAAhD,OAA0D,eAA1D,KAEFC,UA1BO,SA0BE,GACP,OAAO/P,KAAKgP,eAAe,EAAY,CAAE7P,SAASA,EAAlD,SAEF0Q,aA7BO,SA6BK,GACV,gDAA0C,eAA1C,eAEFF,oBAhCO,SAgCY,GAKjB,IAAMpB,GAAevO,KAAKuO,aAAN,eAApB,oBACMtN,EAAQyO,EAAA,4BAAd,GAEA,GAAIzO,EAAJ,EAAe,MAAO,CAAE2O,MAAF,GAAaE,OAAb,EAA2BpG,IAAK,IAEtD,IAAMkG,EAAQF,EAAA,QAAd,GACMI,EAASJ,EAAA,QAAkBzO,EAAQsN,EAAzC,QACM7E,EAAMgG,EAAA,MAAWzO,EAAQsN,EAA/B,QACA,MAAO,CAAEqB,QAAOE,SAAQpG,QAE1BsG,QA/CO,YAoDI,WALF,EAKE,EALF,OAKE,EALF,MAKE,IAFT7K,gBAES,MALF,KAKE,MADTvB,aACS,SACT,IAAYA,EAAQ5D,KAAKiQ,QAAb,IAERvB,IAASzI,OAAb,KACEd,EAAW,OAAAA,IAEPnF,KAAKkQ,YAFT,IAKF,IAAMpB,EAAO,CACXzI,MAAO,CAGL,gBAAiBG,OAHZ,GAIL2J,GAAI,aAAF,OAAenQ,KAAKoQ,KAApB,YAJG,GAKL7J,KAAM,UAERH,GAAI,CACF2I,UAAY,SAAA9L,GAEVA,EAAA,kBAEFwK,MAAO,kBAAMtI,GAAY,sBAE3BhG,MAAO,CACLkR,YAAarQ,KADR,gBAELmF,WACAwH,QAHK,EAIL2C,WAAY1L,IAIhB,IAAK5D,KAAKiE,aAAV,KACE,OAAOjE,KAAKgP,eAAeC,EAApB,OAAqC,CAC1CjP,KAAK8N,SAAW9N,KAAhB,cAAqCA,KAAKiO,MAAMrH,OAAhD,EACI5G,KAAKmP,UAAUT,EADnB,GAD0C,KAI1C1O,KAAKkP,eAAeR,EAJtB,KAQF,IAAM4B,EAAN,KACMC,EAAavQ,KAAKiE,aAAayK,KAAK,CACxC4B,SACA5B,OACArI,MAAO,iCACFyI,EADE,OAEFA,EAAK3P,OAEViH,GAAI0I,EAAK1I,KAGX,OAAOpG,KAAKwQ,UAAUD,GAClBvQ,KAAKgP,eAAeC,EAApB,OADG,GAAP,GAIFC,eA5GO,SA4GO,GAAsB,IAC5BuB,EAAYzQ,KAAKyP,gBAAgBzP,KAAKkE,QAA5C,IAEA,OAAOlE,KAAKgP,eAAe0B,EAApB,KACL,CAAC1Q,KAAKgP,eAAe0B,EAApB,KAAoC,CACnCC,SAAU,CAAEF,kBAIlBR,QArHO,SAqHA,GACL,OAAOjQ,KAAKwO,YAAYlK,QAAQtE,KAAK4Q,SAA9B,KAAP,GAEFJ,UAxHO,SAwHE,GACP,OAAO,IAAAK,EAAA,cACLA,EAAA,qBADF,gBAEEA,EAAA,uCAEJX,YA7HO,SA6HI,GACT,OAAOlM,QAAQ,eAAoB0K,EAAM1O,KAAP,cAAlC,KAEFkE,QAhIO,SAgIA,GACL,OAAOsC,OAAO,eAAoBkI,EAAM1O,KAAP,SAAjC,KAEF4Q,SAnIO,SAmIC,GACN,OAAO,eAAoBlC,EAAM1O,KAAP,UAAuBA,KAAKkE,QAAtD,MAIJW,OApMiD,WAuM/C,IAFA,IAAMkH,EAAN,GACM+E,EAAc9Q,KAAKiO,MAAzB,OACShN,EAAT,EAAoBA,EAApB,EAAyCA,IAAS,CAChD,IAAMyN,EAAO1O,KAAKiO,MAAlB,GAEIjO,KAAKgO,cACPhO,KAAKiQ,QADP,KAIA,MAAIvB,EAAc3C,EAAA,KAAc/L,KAAKgQ,QAAQ,CAAEtB,OAAMzN,WAC5CyN,EAAJ,OAAiB3C,EAAA,KAAc/L,KAAK+P,UAApC,IACIrB,EAAJ,QAAkB3C,EAAA,KAAc/L,KAAKuP,WAArC,IACAxD,EAAA,KAAc/L,KAAKgQ,QAAQ,CAAEtB,OAAMzN,YAS1C,OANA8K,EAAA,QAAmBA,EAAA,KAAc/L,KAAKoC,OAAO,YAAcpC,KAA3D,kBAEAA,KAAA,wBAA+B+L,EAAA,QAAiB/L,KAAKoC,OAArD,iBAEApC,KAAA,uBAA8B+L,EAAA,KAAc/L,KAAKoC,OAAjD,gBAEOpC,KAAKgP,eAAe,EAApB,KAA2B,CAChC/B,YADgC,gBAEhCO,MAAOxN,KAFyB,aAGhCqG,MAAO,CACLE,KADK,UAELwK,UAAW,GAEb5R,MAAO,CAAE4O,MAAO/N,KAAK+N,QAPvB,M,oCCxPW,sBAAW,CACxB7O,KADwB,aAGxBC,MAAO,CACLkP,WAAY,CACVhP,KADU,OAEVE,QAAS,0B,wBCqBFyR,EAAmB,CAC9BC,cAD8B,EAE9BC,qBAF8B,EAG9BC,aAH8B,EAI9BC,aAJ8B,EAK9BC,UAAW,KAIPtM,EAAa,OAAA2I,EAAA,MAAO,EAAD,YAAzB,GAmBe,OAAA3I,EAAA,gBAAoC,CACjD7F,KADiD,WAGjDwN,WAAY,CACVlC,aAAA,QAGFrL,MAAO,CACLmS,WAAY,CACVjS,KADU,OAEVE,QAAS,aAEX+H,OAAQ,CACNjI,KADM,KAENE,SAAS,GAEXgS,WATK,QAULC,MAVK,QAWLC,UAXK,QAYLC,eAZK,QAaLC,cAbK,QAcLC,MAdK,QAeL5D,aAfK,QAgBLC,MAAO,CACL5O,KADK,MAELE,QAAS,iBAAM,KAEjBsS,UAAW,CACTxS,KADS,OAETE,QAAS,WAEX2O,aAAc,CACZ7O,KAAM,CAACmH,OAAQmB,MADH,UAEZpI,QAAS,YAEX4O,SAAU,CACR9O,KAAM,CAACmH,OAAQmB,MADP,UAERpI,QAAS,QAEX6O,UAAW,CACT/O,KAAM,CAACmH,OAAQmB,MADN,UAETpI,QAAS,SAEXuS,UAAW,CACTzS,KAAM,CAACmH,OAAQmB,MADN,QAETpI,QAAS,kBAAMyR,IAEjBnP,SAxCK,QAyCLkQ,YAzCK,QA0CLrQ,aA1CK,QA2CLsQ,WAAYhO,SAGdvE,KArDiD,WAsD/C,MAAO,CACLwS,YAAajS,KAAKuR,WAAavR,KAAlB,MADR,GAELkS,cAFK,EAGLC,cAHK,EAILC,SAJK,GAQL9G,eAA0B1L,IAAfI,KAAK4D,MACZ5D,KADO,MAEPA,KAAK6B,SAAW,QAVf,EAWLwQ,eAXK,EAYLvQ,cAZK,GAaLwQ,qBAbK,GAcLC,uBAAwB,IAI5B3R,SAAU,CAER4R,SAFQ,WAGN,OAAOxS,KAAKyS,iBAAiBzS,KAAKiS,YAAYS,OAAO1S,KAArD,SAEFoL,QALQ,WAMN,wCACK,qCADE,OAAP,IAEE,YAFK,EAGL,kBAAmBpL,KAHd,SAIL,yBAA0BA,KAJrB,WAKL,2BAA4BA,KALvB,aAML,qBAAsBA,KAAK6B,YAI/B8Q,cAhBQ,WAiBN,OAAO3S,KAAP,UAEF4S,aAnBQ,WAoBN,qBAAe5S,KAAf,OAEF4B,qBAtBQ,WAuBN,OAAO5B,KAAK6B,SACR7B,KAAK8B,cADF,QAEF9B,KAAKkE,QAAQlE,KAAK8B,cAAlB,KAAD,eAFJ,QAIF4K,WA3BQ,WA4BN,OAAO1M,KAAK4L,UAAY,CAAC,CACvB1M,KADuB,gBAEvB0E,MAAO,CACLwG,QAASpK,KADJ,KAEL6S,iBAAkB7S,KAAK6S,yBAJ3B,GAQFC,cApCQ,WAqCN,cAEFC,SAvCQ,WAwCN,OAAO/S,KAAKwR,OAASxR,KAArB,YAEFgC,QA1CQ,WA2CN,OAAOgC,QAAQhE,KAAK+S,UAAY/S,KAAKiE,aAArC,YAEF+O,QA7CQ,WA8CN,OAAOhT,KAAK8B,cAAc8E,OAA1B,GAEFqM,SAhDQ,WAiDN,IAAMlL,EAAU/H,KAAKkT,QAAWlT,KAAKkT,OAAOC,QAAZ,SAAhC,SACM9M,EAAQ0B,EAAU,kBACtB,GAAW,GADb,GAIA,MAAO,CACL1B,MAAO,oCAAF,IAEH8J,GAAInQ,KAAK4S,eAEXzT,MAAO,CACL2O,OAAQ9N,KADH,SAELqP,MAAOrP,KAFF,UAGL+N,MAAO/N,KAHF,MAILgO,aAAchO,KAJT,aAKLiO,MAAOjO,KALF,iBAMLkO,aAAclO,KANT,aAOLmO,SAAUnO,KAPL,SAQLoO,UAAWpO,KARN,UASLqO,WAAYrO,KAAKoT,SAASC,KAAKC,EAAEtT,KAT5B,YAUL8B,cAAe9B,KAAK8B,eAEtBsE,GAAI,CACFmN,OAAQvT,KAAKwD,YAEfgQ,YAAa,CACX9E,KAAM1O,KAAKiE,aAAayK,QAI9B+E,WA/EQ,WAoFN,OAJIzT,KAAKoC,OAAO,YAAcpC,KAAKoC,OAA/B,iBAAyDpC,KAAKoC,OAAlE,iBACE,OAAAyF,EAAA,mEAGK7H,KAAKgP,eAAe0E,EAAa1T,KAAxC,WAEF2T,iBAtFQ,WAuFN,OAAQ3T,KAAK4T,YAAL,KACJ5T,KADI,cAEJA,KAAK2S,cAAc9I,MAAM,EAAG7J,KAFhC,WAIFkC,YAAa,kBA3FL,GA4FR0R,YA5FQ,WA6FN,IAAIC,EAAkB,kBAAO7T,KAAP,UAClBA,KAAK8R,UAAUgC,MADG,KAElB9T,KAFJ,UAWA,OAPI2H,MAAA,QAAJ,KACEkM,EAAkBA,EAAA,QAAuB,cAEvC,OADAE,EAAIC,EAAJ,WACA,IAFF,KAMF,iCAAO,GAAP,IAEEpC,MAAO5R,KAFF,MAGL4D,MAAO5D,KAAKkC,aAAelC,KAHtB,aAILiU,YAAaJ,EAAA,UAJR,GAKFA,KAKTlO,MAAO,CACLjC,cADK,SACQ,GACX1D,KAAA,eACAA,KAAA,oBAEFmS,aALK,SAKO,GAAK,WACfrR,OAAA,YAAkB,kBAAM,qBAAxB,OAEFmN,MAAO,CACLiG,WADK,EAEL9J,QAFK,SAEE,GAAK,WACNpK,KAAJ,YAIEA,KAAA,WAAe,WACb,cAAmB,mBAAsB,qBAAzC,OAIJA,KAAA,sBAKNH,QAAS,CAEPsU,KAFO,SAEH,GACF,yCACAnU,KAAA,gBACAA,KAAA,aACAA,KAAA,kBAGFoU,aATO,WAWFpU,KAAD,gBACAA,KAFF,eAKAA,KAAA,kBAEFqU,kBAjBO,WAiBU,WACfrU,KAAA,SAAcA,KAAK6B,SAAW,QAA9B,GACA7B,KAAA,iBACAA,KAAA,WAAe,kBAAM,eAAoB,cAAzC,WAEIA,KAAJ,cAAsBA,KAAKmS,cAAe,IAE5CU,iBAxBO,SAwBS,GACd,OAAK7S,KAAL,eAGGA,KAAD,gBAIEA,KAAD,eACAA,KAAKsU,aAAaC,SAAStR,EAL5B,UAQAjD,KARA,MASCA,KAAKwU,IAAID,SAAStR,EATnB,SAUAA,EAAA,SAAajD,KAXf,KAcFyS,iBAzCO,SAyCS,GAEd,IADA,IAAMgC,EAAe,IAArB,IACSxT,EAAT,EAAoBA,EAAQyT,EAA5B,WAAiD,CAC/C,IAAMhG,EAAOgG,EAAb,GACMpS,EAAMtC,KAAK4Q,SAF8B,IAK9C6D,EAAA,IAAD,IAA0BA,EAAA,MAA1B,GAEF,OAAO9M,MAAA,KAAW8M,EAAlB,WAEF/P,kBApDO,SAoDU,GAAc,WACvB0J,EAAYpO,KAAK4Q,SAAvB,GAEA,OAAQ5Q,KAAK0D,eAAN,eAAsC,SAAAiR,GAAD,OAAe,kBAAqB,WAArB,GAA3D,OAEFL,WAzDO,WA0DL,OAAOtU,KAAKgB,MAAM4T,MAAQ5U,KAAKgB,MAAM4T,KAAK5T,MAA1C,SAEF4B,iBA5DO,SA4DS,KAA6B,WACrCiS,GACH7U,KAAD,eACAA,KAAKkQ,YAFP,GAKA,OAAOlQ,KAAKgP,eAAe8F,EAApB,KAA2B,CAChC7H,YADgC,iBAEhC5G,MAAO,CAAE0K,UAAW,GACpB5R,MAAO,CACLoB,MAAOP,KAAK0R,iBADP,EAELvM,SAFK,EAGLmK,WAAYrO,IAAUjB,KAHjB,cAIL+U,MAAO/U,KAAKgS,YAEd5L,GAAI,CACFqH,MAAQ,SAAAxK,GACN,IAEAA,EAAA,kBAEA,oBAEF,cAAe,kBAAM,mBAEvBiD,IAAK8O,KAAA,UAAehV,KAAK4Q,SAApB,KACJ5Q,KAAKkE,QApBR,KAsBF+Q,kBAxFO,SAwFU,OACf,IAAM5F,EAAQpO,IAAUjB,KAAV,eAAgCA,KAA9C,cACM6U,GACH7U,KAAD,eACAA,KAAKkQ,YAFP,GAKA,OAAOlQ,KAAKgP,eAAe,MAAOhP,KAAK4O,aAAaS,EAAO,CACzDpC,YADyD,iDAEzDO,MAAO,CACL,gCAAiCqH,GAEnC3O,IAAK8O,KAAA,UAAehV,KAAK4Q,SAApB,MALA,UAMA5Q,KAAKkE,QAAQwK,IANb,OAMqBwG,EAAO,GANnC,QAQFC,eAvGO,WAwGL,IAAMC,EAAapV,KAAnB,gBACM2C,EAAQ3C,KAFF,WAcZ,OARI2H,MAAA,QAAJ,GACEyN,EAAA,KAD6B,IAI7BA,EAAA,SAAsBA,EAAA,UAAtB,GACAA,EAAA,kBAGK,CACLpV,KADK,cAELA,KAAKgP,eAAe,MAAO,CACzB/B,YADyB,iBAEzBP,WAAY1M,KAAK0M,YAChB,CACD1M,KADC,WAEDA,KAAKqV,OAASrV,KAAKsV,SAAnB,UAFC,OAIDtV,KAAKuV,OAASvV,KAAKsV,SAAnB,UAJC,KAKDtV,KALC,eAMDA,KANC,cAODA,KAZG,mBAcLA,KAdK,UAeLA,KAfF,gBAkBFwV,QAvIO,SAuIA,OAKL,IAAMrI,EAAOsI,EAAA,2CAAb,GAaA,MAXA,WAAIpW,IAEF8N,EAAA,iBAAyB,OAAAI,EAAA,MAAUJ,EAAA,YAAD,KAA0B,CAC1D9G,MAAO,CACL0K,SAAU5D,EAAA,wCADL,KAEL,cAFK,OAGL,kBAAcvN,MAKpB,GAEF8C,SA3JO,WA4JL,IAAMC,EAAQ,qCAAd,MAgBA,cAdOA,EAAA,WAAP,KAEAA,EAAA,KAAa,OAAA4K,EAAA,MAAU5K,EAAD,KAAc,CAClCgO,SAAU,CAAE/M,MAAO,MACnByC,MAAO,CACLqP,UADK,EAELrW,KAFK,OAGL,gBAAiBmH,OAAOxG,KAHnB,YAIL,wBAAyB,eAAqBA,KAAKgB,MAAN,KAJxC,iBAKL2U,aAAc,eAAqBhT,EAAD,kCAEpCyD,GAAI,CAAEwP,SAAU5V,KAAK6V,cAGvB,GAEFC,eA9KO,WA+KL,OAAO9V,KAAKgP,eAAe,QAAS,CAClC2B,SAAU,CAAE/M,MAAO5D,KAAKsL,WACxBjF,MAAO,CACLhH,KADK,SAELH,KAAMc,KAAK+V,OAAO7W,SAIxB8W,aAvLO,WAwLL,IAAMnR,EAAS,yCAAf,MAUA,OARAA,EAAA,4CACKA,EAAA,KADgB,OAArB,IAEE0B,KAFmB,SAGnB,gBAHmB,UAInB,gBAAiBC,OAAOxG,KAJL,cAKnB,YAAaA,KAAK4S,eAGpB,GAEFqD,QApMO,WAsML,OAAIjW,KAAKoC,OAAO,YAAcpC,KAAKoC,OAA/B,iBAAyDpC,KAAKoC,OAAlE,eACSpC,KAAP,kBAEOA,KAAP,YAGJkW,gBA5MO,WA4MQ,WACPC,EAAQ,CAAC,eAAgB,UAAW,eAA5B,QACJ,SAAAC,GAAQ,OAAI,SADR,WAEP,SAAAA,GAAQ,OAAI,4BAAgC,CAC/CvF,KAAMuF,GACL,SALQ,OASb,OAAOpW,KAAKgP,eAAe0E,EAAa,OAAjC,OAAiC,CAAjC,GACF1T,KAAKiT,UADV,IAIFoD,QAzNO,WAyNA,WACClX,EAAQa,KAAd,YAgBA,OAfAb,EAAA,UAAkBa,KAAKgB,MAFlB,cAQH,KAAAhB,KAAA,aACAA,KAAA,QAHF,WAIEA,KAAA,OAEAb,EAAA,OAAea,KAAf,IAEAb,EAAA,OAAea,KAAf,OAGKA,KAAKgP,eAAesH,EAApB,KAA2B,CAChCjQ,MAAO,CAAEE,UAAM3G,GACfT,QACAiH,GAAI,CACFzD,MAAQ,SAAAL,GACN,iBACA,eAEFiU,OAAQvW,KAAKwW,UAEfC,IAAK,QACJ,CAACzW,KAXJ,aAaF0W,cAvPO,WAwPL,IAGA,EAHI9P,EAAS5G,KAAK8B,cAAlB,OACMiK,EAAW,IAAIpE,MAArB,GAIEgP,EADE3W,KAAKiE,aAAT,UACiBjE,KAAf,iBACSA,KAAJ,SACUA,KAAf,iBAEeA,KAAf,kBAGF,MAAO4G,IACLmF,EAAA,GAAmB4K,EACjB3W,KAAK8B,cADwB,KAG7B8E,IAAWmF,EAAA,OAHb,GAOF,OAAO/L,KAAKgP,eAAe,MAAO,CAChC/B,YAAa,wBADf,IAIF2J,iBAhRO,SAgRS,KAA6B,WAC3C,OAAO5W,KAAKiE,aAAa4S,UAAW,CAClCxQ,MAAO,CACLmH,MAAO,kBAET8C,OAJkC,KAKlC5B,OACAzN,QACAsS,OAAS,SAAAtQ,GACPA,EAAA,kBACA,mBAEF6T,SAAU7V,IAAUjB,KAXc,cAYlCmF,UAAWnF,KAAK+W,iBAGpB7T,aAhSO,WAiSL,OAAOlD,KAAKgB,MAAM4T,KAAQ5U,KAAKgB,MAAM4T,KAA9B,WAAP,GAEF1E,YAnSO,SAmSI,GACT,OAAO,eAAoBxB,EAAM1O,KAAP,cAA1B,IAEFkE,QAtSO,SAsSA,GACL,OAAO,eAAoBwK,EAAM1O,KAAP,SAA1B,IAEF4Q,SAzSO,SAySC,GACN,OAAO,eAAoBlC,EAAM1O,KAAP,UAAuBA,KAAKkE,QAAtD,KAEF8S,OA5SO,SA4SD,GACJ/T,GAAKjD,KAAKiX,MAAM,OAAhBhU,IAEFF,YA/SO,SA+SI,GACL/C,KAAJ,SAAmBA,KAAKwD,WAAxB,GACKxD,KAAK2D,SAFa,MAKvB,IAAI3D,KAAK8B,cAAc8E,OACrB5G,KAAA,gBAEAA,KAAA,gBAEFA,KAAA,kBAEF0K,QA3TO,SA2TA,GACA1K,KAAL,gBAEKA,KAAKkX,cAAcjU,EAAxB,UACEjD,KAAA,iBAGGA,KAAL,YACEA,KAAA,aACAA,KAAA,gBAGFA,KAAA,mBAEFmX,UAzUO,SAyUE,GACPlU,EAAA,iBACIjD,KAAJ,eACEiD,EAAA,kBACAjD,KAAA,kBAGJ6V,WAhVO,SAgVG,GAAkB,WAC1B,IACE7V,KAAK6B,UACJ7B,KADD,gBAEAA,KAHF,eAMA,IAAMoX,EAPoB,IAQpBC,EAAMC,YAAZ,MACID,EAAMrX,KAAN,uBAAJ,IACEA,KAAA,yBAEFA,KAAA,sBAA6BiD,EAAA,IAA7B,cACAjD,KAAA,yBAEA,IAAMiB,EAAQjB,KAAKwS,SAAS+E,WAAU,SAAA7I,GACpC,IAAMgB,GAAQ,cAAD,IAAb,WAEA,OAAOA,EAAA,yBAA8B,EAArC,yBAEIhB,EAAO1O,KAAKwS,SAAlB,IACA,IAAIvR,IACFjB,KAAA,SAAgBwB,KAAA,IAASxB,KAAT,SAAwBiB,EAAxC,GACAjB,KAAA,SAAcA,KAAK0B,aAAegN,EAAO1O,KAAK4Q,SAA9C,IACA5Q,KAAA,WAAe,kBAAM,aAArB,cACAI,YAAW,kBAAM,eAAjB,SAGJgD,UA5WO,SA4WE,GAAkB,WACzB,IAAIpD,KAAKwX,YAAcvU,EAAA,UAAc,OAArC,KAEA,IAAMI,EAAUJ,EAAhB,QACM2R,EAAO5U,KAAKgB,MAJO,KAczB,GAPI,CACF,OADE,MAEF,OAFE,gBAAJ,IAGqBhB,KAAKoU,eAE1BpU,KAAA,mBAEA,EAeA,OAXIA,KAAKmS,cAAgB9O,IAAY,OAArC,KACErD,KAAA,WAAe,WACb4U,EAAA,mBACA,4BAAgCA,EAAhC,eASD5U,KAAD,cACA,CAAC,OAAD,GAAc,OAAd,eAFF,GAGSA,KAAKyX,SAhCW,GAmCrBpU,IAAY,OAAhB,IAAqCrD,KAAKmX,UAnCjB,GAsCrB9T,IAAY,OAAhB,IAAqCrD,KAAKuD,UAtCjB,GAyCrBF,IAAY,OAAhB,MAAuCrD,KAAK0X,YAAZ,QAAhC,IAEFC,mBAvZO,SAuZW,GAIhB,KACG3X,KAAK6B,WAAN,GACA7B,KAAKkD,gBAFP,IAKA,IAAM0R,EAAO5U,KAAKgB,MAAlB,KAEA,GAAK4T,GAAS5U,KAAd,QAGA,IAAK,IAAI2U,EAAT,EAAgBA,EAAIC,EAAA,MAApB,OAAuCD,IACrC,YAAIC,EAAA,uCAAwD,CAC1D5U,KAAA,gBACA,SAIN4X,UA5aO,SA4aE,GAAe,WAEpB5X,KAAK6X,cAAL,IACA5U,EAAA,OACAjD,KAHF,gBAQMA,KAAKkX,cAAcjU,EAAvB,QACEjD,KAAA,WAAe,kBAAO,gBAAqB,EADX,gBAIvBA,KAAJ,aACLA,KAAA,kBAIJ,+CAEFwW,SAhcO,WAgcC,WACN,GAAKxW,KAAL,aAEO,CACL,GAAIA,KAAKoS,SAAWpS,KAAK2S,cAAzB,OAA+C,OAE/C,IAAMmF,EACJ9X,KAAKsU,aAAayD,cACjB/X,KAAKsU,aAAa0D,UACnBhY,KAAKsU,aAHe,cAAtB,IAMA,IACEtU,KAAA,mBAXFiY,uBAAsB,kBAAO,yBAA7B,MAeJP,YAjdO,SAidI,GACTzU,EAAA,kBAEFM,UApdO,SAodE,GACP,IAAMqR,EAAO5U,KAAKgB,MAAlB,KAEA,MAEA,IAAMkX,EAAatD,EALM,YAUtB5U,KAAD,aAEAA,KAHF,cAKEiD,EAAA,iBACAA,EAAA,kBAEAiV,EAAA,SAKAlY,KAAA,UAGJyX,SA7eO,SA6eC,GACN,IAAM7C,EAAO5U,KAAKgB,MAAlB,KAEA,MAOA,GALAiC,EALwB,iBAUpBjD,KAAJ,SAAmB,OAAOA,KAAP,eAEnB,IAAMqD,EAAUJ,EAZQ,QAgBxB2R,EAAA,YAEA9T,OAAA,uBAA6B,WAC3B8T,EAAA,WACA,YAAAvR,EAA0BuR,EAA1B,WAA4CA,EAA5C,WACAA,EAAA,YAAmBA,EAAA,WAAnB,aAGJpR,WArgBO,SAqgBG,GAAc,WACtB,GAAKxD,KAAL,SAGO,CACL,IAAM0D,GAAiB1D,KAAK0D,eAAN,IAAtB,QACMiR,EAAI3U,KAAK0E,kBAAf,GAkBA,IAhBA,IAAAiQ,EAAWjR,EAAA,OAAAiR,EAAX,GAAwCjR,EAAA,KAAxC,GACA1D,KAAA,SAAc0D,EAAA,KAAmB,SAAAiR,GAC/B,OAAO,iBAAwB,WAA/B,OAMF3U,KAAA,WAAe,WACb,cACG,aADH,uBAOGA,KAAL,SAAoB,OAEpB,IAAMmY,EAAYnY,KAAlB,eAMA,GAJAA,KAAA,cAxBK,GA4BDA,KAAJ,aAAuB,OAEvBA,KAAA,WAAe,kBAAM,eAArB,WAhCAA,KAAA,SAAcA,KAAK0B,aAAegN,EAAO1O,KAAK4Q,SAA9C,IACA5Q,KAAA,iBAkCJoY,aA1iBO,SA0iBK,GACVpY,KAAA,aAAqBA,KAAKgB,MAAM4T,KAAX,UAArB,IAEFnR,iBA7iBO,WA6iBS,aACR3B,EAAN,GACMuW,EAAUrY,KAAD,UAAmB2H,MAAA,QAAc3H,KAAjC,eAEXA,KAFJ,cACI,CAACA,KADU,eAFD,iBAMd,GANc,yBAMd,EANc,QAONiB,EAAQ,sBAAwB,SAAA+J,GAAC,OAAI,kBACzC,WADyC,GAEzC,WAFF,OAKI/J,GAAJ,GACEa,EAAA,KAAmB,WAAnB,KAPJ,2BAA4B,IANd,8BAiBd9B,KAAA,iBAEF2D,SAhkBO,SAgkBC,GACN,IAAM2U,EAAWtY,KAAjB,cACAA,KAAA,gBACA4D,IAAA,GAAsB5D,KAAKiX,MAAM,SAAjCrT,IAEFsT,cArkBO,SAqkBM,GAGX,IAAMqB,EAAcvY,KAAKgB,MAAzB,gBAEA,OAAOuX,IAAgBA,IAAA,GAA0BA,EAAA,SAAjD,S,0KCr0BAvH,EAAmB,yCAAH,IAEpBwH,SAFuB,EAGvBC,gBAHuB,EAIvBC,YAAY,IAIC,qBAAe,CAC5BxZ,KAD4B,iBAG5BC,MAAO,CACLwZ,cAAe,CACbtZ,KADa,QAEbE,SAAS,GAEXqZ,gBAAiB,CACfvZ,KADe,QAEfE,SAAS,GAEXsZ,OAAQ,CACNxZ,KADM,SAENE,QAAS,gBACP,OAAO4O,EAAA,4BAAqC2K,EAArC,sBAAP,IAGJC,WAfK,QAgBLjH,UAAW,CACTzS,KAAM,+BADG,KAETE,QAAS,kBAAMyR,IAEjB1C,SApBK,QAqBLC,YAAa,CACXlP,KADW,OAEXE,aAASK,IAIbH,KA9B4B,WA+B1B,MAAO,CACLuZ,WAAYhZ,KAAKuO,cAIrB3N,SAAU,CACRwK,QADQ,WAEN,wCACK,qCADE,OAAP,IAEE,kBAFK,EAGL,qCAAsCpL,KAAKqS,eAAiB,KAGhEM,cARQ,WASN,OAAO3S,KAAP,eAEFiZ,eAXQ,WAWM,WACZ,OAAOjZ,KAAK8B,cAAc2M,KAAI,SAAAC,GAAI,OAAI,WAAtC,OAEFvM,kBAdQ,WAcS,WACf,OAAOnC,KAAKgO,aACRhO,KAAKkZ,cAAcC,MAAK,SAAAzK,GAAI,OAAK,UAD9B,MAEH1O,KAAKkZ,cAActS,OAFvB,GAIFwS,aAnBQ,WAoBN,aAAIpZ,KAAKqZ,aAA6B,EAE/B7S,OAAOxG,KAAKkE,QAAQlE,KAApB,eAAP,QAEFkZ,cAxBQ,WAwBK,WACX,OAAKlZ,KAAD,aAAqBA,KAArB,UAAJ,MAA0CA,KAAK+B,eAA+B/B,KAAP,SAEhEA,KAAKwS,SAASqG,QAAO,SAAAnK,GAC1B,IAAM9K,EAAQ,eAAoB8K,EAAM,EAAxC,UACMgB,EAAO,MAAA9L,EAAgB4C,OAAhB5C,GAAb,GAEA,OAAO,WAAkB4C,OAAO,EAAzB,gBAAP,OAGJzE,eAAgB,CACduX,IADc,WAEZ,OAAOtZ,KAAP,YAEFuZ,IAJc,SAIX,GACDvZ,KAAA,aAEAA,KAAA,iCAGJiC,kBA5CQ,WA6CN,UAEF+Q,QA/CQ,WAgDN,OAAOhT,KAAKwZ,eAAiBxZ,KAAK8B,cAAc8E,OAAhD,GAEF6S,YAlDQ,WAmDN,OACEzZ,KAAK6B,UACL7B,KAFK,eAILA,KAAKwZ,eACLxZ,KAAK+B,iBAAmB/B,KAAKkE,QAAQlE,KALvC,eAQFkC,YA3DQ,WA4DN,QAAKlC,KAAL,YAEOA,KAAKmC,oBAAsBnC,KAAlC,aAEF4T,YAhEQ,WAiEN,IAAMzU,EAAQ,yCAAd,MAEA,OADCA,EAAA,aAA6B,kCAA4BA,EAAA,cAA5B,IAA7B,OACD,iCAAO,GAEFA,IAGPqa,cAxEQ,WAyEN,OAA8B,MAAvBxZ,KAAK+B,gBAAZ,KACE/B,KAAK+B,gBAETsX,aA5EQ,WA4EI,WACV,OAAIrZ,KAAJ,SAA0B,KAEnBA,KAAK8B,cAAcU,MAAK,SAAAmS,GAC7B,OAAO,kBAAqB,WAArB,GAAuC,WAAc,EAA5D,oBAGJ1B,SAnFQ,WAoFN,IAAMxT,EAAO,sCAAb,MAaA,OAXAA,EAAA,uCACKA,EADQ,OAAb,IAEEwO,MAAOjO,KAFI,iBAGXsO,SACEtO,KAAKsO,WACJtO,KADD,cAECA,KAAKkZ,cANG,OAQX3K,YAAavO,KAAK+B,iBAGpB,IAIJ4D,MAAO,CACLuT,cADK,yBAELxV,cAFK,YAGLkI,UAHK,SAGI,GACP,GACErK,SAAA,wBAAkCvB,KAAlC,QACAA,KAAA,aAAoBA,KAAKgB,MAAM2B,MAA/B,WAEApB,SAAA,2BAAqCvB,KAArC,QACAA,KAAA,eAGJmS,aAZK,SAYO,IACN7P,GAAQtC,KAAZ,UAEAA,KAAA,oBAEFiO,MAjBK,SAiBA,KAOCyL,GAAUA,EAAZ,SACA1Z,KADA,aAEAA,KAFA,WAGCA,KAHD,eAIAsC,EALF,QAMEtC,KAAKoU,gBAET7F,YA/BK,SA+BM,GACTvO,KAAA,cAEF+B,eAlCK,0BAmCLoM,SAAU,cAGZwL,QA/K4B,WAgL1B3Z,KAAA,aAGF4Z,UAnL4B,WAoL1BrY,SAAA,2BAAqCvB,KAArC,SAGFH,QAAS,CACPsD,uBADO,SACe,KAA+B,WAG/Cb,IAAJ,IAEAtC,KAAA,iBAEAA,KAAA,WAAe,WAEV,EAAD,iBACC,IAAAsC,EAAA,QACE,EAHL,mBAMA,wBACA,wBAGJD,wBAnBO,WAoBLrC,KAAA,wBAEF6Z,qBAtBO,WAwBL7Z,KAAA,cAAqBA,KAAKgB,MAA1B,MAAwChB,KAAKgB,MAAM4T,KAAnD,oBAEFkF,oBA1BO,SA0BY,GAGb9Z,KAAJ,gBAEIA,KAAK6B,UAAYwB,IAAY,OAAjC,MACE,IAAIrD,KAAKqS,cACPrS,KAAA,cAAqBA,KAAK8B,cAAc8E,OAAxC,EAEA5G,KAAA,gBAEOA,KAAK6B,UAAYwB,IAAY,OAAjC,MACDrD,KAAKqS,eAAiBrS,KAAK8B,cAAc8E,OAA7C,EACE5G,KAAA,iBAEAA,KAAA,gBAEOqD,IAAY,OAAZ,WAAkCA,IAAY,OAAlD,QACLrD,KAAA,sBAGJ+Z,kBA/CO,WAgDL,IAAMC,EAAWha,KAAjB,cACMia,EAAUja,KAAK8B,cAFN,GAKf,GACG9B,KAAD,gBACAA,KAAKkQ,YAFP,IAKA,IAAMgK,EAAYla,KAAK8B,cAAc8E,OAVtB,EAcf,IACE,IAAA5G,KAAKqS,eADP,IAEE6H,EAFF,CASA,IAAMtT,EAAS5G,KAAK8B,cAApB,OACMqY,EAAYH,IAAapT,EAAb,EAAAoT,EAEdA,EAFJ,EAGMI,EAAWpa,KAAK8B,cAAtB,GAEA,EAGE9B,KAAA,cAFAA,KAAA,SAAcA,KAAK6B,SAAW,QAA9B,GAKF7B,KAAA,qBAjBEA,KAAA,kBAmBJqU,kBApFO,WAqFLrU,KAAA,sBAEA,qDAEF0C,SAzFO,WA0FL,IAAMC,EAAQ,qCAAd,MAUA,OARAA,EAAA,KAAa,eAAUA,EAAD,KAAc,CAClC0D,MAAO,CACL,wBAAyB,eAAqBrG,KAAKgB,MAAN,KADxC,iBAEL2U,aAAc,eAAqBhT,EAAD,kCAEpCgO,SAAU,CAAE/M,MAAO5D,KAAK+B,kBAG1B,GAEFiU,aAtGO,WAuGL,IAAMnF,EAAO,yCAAb,MAIA,OAFAA,EAAA,2BAEA,GAEF6F,cA7GO,WA8GL,OAAO1W,KAAKgC,SAAWhC,KAAhB,SACH,0CADGA,MAAP,IAIF0K,QAlHO,SAkHA,GACA1K,KAAL,gBAEAA,KAAA,iBACKA,KAAKqS,eADV,EAEIrS,KAFJ,UAIKA,KAAKkX,cAAcjU,EAAxB,SAAmCjD,KAAKoU,iBAE1CzI,QA3HO,SA2HA,GACL,KACE3L,KAAKqS,eAAL,IACCpP,EAFH,QAKA,IAAM0D,EAAS1D,EAAf,OACMW,EAAQ+C,EAPC,MAUXA,EAAJ,OAAkB3G,KAAKoU,eAEvBpU,KAAA,iBACAA,KAAA,SAAgB2G,EAAA,UAAmBA,EAAA,SAAnC,WAEFvD,UA1IO,SA0IE,GACP,IAAMC,EAAUJ,EAAhB,QAEA,2CAHyB,GASzBjD,KAAA,wBAEF0X,YArJO,SAqJI,KACXnU,UAtJO,SAsJE,GACP,8CACAvD,KAAA,cAEFyX,SA1JO,SA0JC,GAENxU,EAFgB,iBAOhBjD,KAAA,gBAEFwD,WAnKO,SAmKG,GACR,+CACAxD,KAAA,aAEFyD,iBAvKO,WAwKL,6CADc,MAKTzD,KAAL,WAAqBA,KAAKqa,aAE5BA,UA9KO,WA8KE,WAGPra,KAAA,WAAe,WAEV,EAAD,UACC,EADD,gBAEC,EAHH,eAKE,kBACG,gBAAD,QACA,EADA,UAEA,EAHoB,aAMlB,UAAa,EANjB,mBAUNmE,WAjMO,YAkMAnE,KAAD,eACDA,KADH,iBAIKA,KAAKkI,gBACRlI,KADG,eAEHA,KAAK4Q,SAAS5Q,KAFhB,iBAIEA,KAAA,cAGJiQ,QA7MO,SA6MA,GACL,OAAOjQ,KAAKiZ,eAAe3U,QAAQtE,KAAK4Q,SAAjC,KAAP,GAEF0J,OAhNO,SAgND,GACJ,QAAIta,KAAKqS,cAAT,CAEA,IAAMkI,EAAcva,KAAK8B,cAAc9B,KAAvC,eACMwa,EAAkBxa,KAAKkE,QAA7B,GACAO,EAAA,sCACAA,EAAA,oEACAA,EAAA,uB,sNC9YS,sBAAO,EAAD,0BAKnB,eALmB,aAMnB,eANa,sBAON,CACPvF,KADO,SAGPC,MAAO,CACLsb,OAAQ,CACNpb,KADM,QAENE,SAAS,GAEX8Q,YAAa,CACXhR,KADW,OAEXE,QAFW,WAGT,OAAKS,KAAL,UAEOA,KAAK0a,UAAZ,YAF4B,KAKhCna,MAbK,QAcLoa,UAAW,CACTtb,KADS,OAETE,QAAS,WAEX4F,SAlBK,QAmBLyV,UAnBK,QAoBL/B,OApBK,QAqBLgC,WAAY,CACVxb,KADU,OAEVE,QAAS,aAEXub,MAzBK,QA0BLC,KA1BK,QA2BLC,SA3BK,QA4BLC,KA5BK,QA6BLC,IAAK,CACH7b,KADG,OAEHE,QAAS,QAEX4b,UAjCK,OAkCLvX,MAAO,MAGTnE,KAAM,iBAAO,CACX2b,WAAY,mBAGdxa,SAAU,CACRwK,QADQ,WAEN,oEACE,UADK,GAEF,qCAFE,OAAP,IAGE,oBAAqBpL,KAHhB,YAIL,mBAAoBA,KAJf,SAKL,oBAAqBA,KALhB,UAML,gBAAiBA,KANZ,MAOL,eAAgBA,KAPX,OAQL,oBAAqBA,KARhB,MASL,mBAAoBA,KATf,SAUL,eAAgBA,KAVX,KAWL,oBAAqBA,KAXhB,UAYFA,KAZE,cAaFA,KAbE,iBAcFA,KAAKqb,eAGZC,SAnBQ,WAoBN,OAAOtX,QAAQhE,KAAf,QAEFub,YAtBQ,WAuBN,OAAOvX,QACL,gDACAhE,KAFF,aAOJ2Z,QA1EO,WA0EA,WACC6B,EAAgB,CACpB,CAAC,UADmB,YAEpB,CAAC,WAFmB,eAGpB,CAAC,QAHmB,UAIpB,CAAC,SAJH,iBAQAA,EAAA,SAAsB,YAA4B,0BAA3B,EAA2B,KAA5B,EAA4B,KAC5C,wBAAJ,IAA0C,eAASC,EAAUC,EAAnB,OAI9C7b,QAAS,CACP4N,MADO,SACF,GACHzN,KAAA,iBAEAA,KAAA,WAAkBA,KAAlB,UAEF2b,UANO,WAOL,IAAM5P,EAAN,GAWA,OATI/L,KAAJ,UACE+L,EAAA,KACE/L,KAAKgP,eAAe,EAApB,KAA2B,CACzB/B,YADyB,iBAEzB9N,MAAO,CAAEyc,MAAM,IACd5b,KAJL,aAQKA,KAAKgP,eAAe,EAApB,KAAP,IAEF6M,SApBO,WAoBC,WACN,OAAO7b,KAAKgP,eAAe,EAApB,KAA2B,CAChC/B,YADgC,gBAEhC9N,MAAO,CACL2c,OADK,EAELC,KAAM,IAER3V,GAAI,CACFqH,MAAQ,SAAAxK,GACNA,EAAA,kBACAA,EAAA,iBAEA,uBACA,+BAGHjD,KAfH,YAiBFgc,WAtCO,WAuCL,OAAOhc,KAAKgP,eAAe,OAAQ,CACjC/B,YAAa,mBACZ,CACDjN,KAAK6Y,QAAU7Y,KADd,YAEDA,KAAKoC,OAFJ,QAGDpC,KAAKsb,UAAYtb,KALnB,eAUJ6E,OAzIO,SAyID,GACJ,IAAMkH,EAAW,CAAC/L,KAAlB,cADO,EAEaA,KAApB,oBAAI,EAFG,EAEH,IAAOP,EAFJ,EAEIA,KAEXA,EAAA,uCACKA,EADQ,OAAb,IAEEmb,UAAW5a,KAAK4a,UAAY,YAFjB,EAGX7J,SAAU/Q,KAAK0a,YAAc1a,KAAnB,WAAuCP,EAAA,MAAYsR,WAE/DtR,EAAA,gBAAsB,CACpBP,KADoB,OAEpB0E,MAAO5D,KAAKya,SAEdhb,EAAOO,KAAKic,mBAAmBjc,KAAxB,MAAPP,GAEA,IAAM4P,EAAQrP,KAAKmb,WAAcnb,KAAKgb,UAAYhb,KAAlD,MAEA,OAAOgN,EAAEkO,EAAKlb,KAAK4O,aAAaS,EAAxB,GAAR,O,0EClLW,qBAAiB,CAC9BnQ,KAD8B,YAG9BC,MAAO,CACLwO,MADK,QAELuO,SAAUlY,SAGZa,OAR8B,SAQxB,GAEJ,MAIA,OAHK7E,KAAKmc,OAAN,MAAJ,cAAyBnc,KAAKmc,OAAO5V,OACnC6V,EAAcpc,KAAKkc,SAAW,WAA9B,cAEKlP,EAAE,KAAM,CACbQ,MAAO,gBACL,aADK,EAEL,mBAAoBxN,KAFf,MAGL,sBAAuBA,KAHlB,UAIFA,KAAK4N,cAEVvH,MAAO,gBACLE,KADK,YAEL,mBAFK,GAGFvG,KAAKmc,QAEV/V,GAAIpG,KAAK6N,iB,yDC5Bf,SAASpD,EAAT,KACE,IAAM4R,EAAWhS,EAAjB,MACMiS,EAAUjS,EAAA,SAAmB,CAAEkS,SAAS,GAE9Czb,OAAA,+BACAyJ,EAAA,UAAe,CACb8R,WACAC,WAGGjS,EAAD,WAAuBA,EAAA,UAA3B,OACEgS,IAIJ,SAASzR,EAAT,GACE,GAAKL,EAAL,WAD8B,MAGAA,EAA9B,UAAM,EAHwB,EAGxB,SAAY+R,EAHY,EAGZA,QAClBxb,OAAA,yCACOyJ,EAAP,WAGK,IAAMiS,EAAS,CACpB/R,WACAG,UAGF,U,wSCzBM7F,EAAa,OAAA2I,EAAA,MAAO,EAAD,YAAzB,QAiBe,EAAA3I,EAAA,gBAAoC,CACjD7F,KADiD,WAGjDC,MAAO,CACLwZ,cADK,QAELrL,MAFK,QAGLD,KAHK,QAILoP,SAAU,CACRpd,KAAM,CAACC,OADC,QAERC,QAAS,QAEXmd,SAAU,CAACpd,OARN,QASL2U,YAAa,CACX5U,KAAM,CAACC,OADI,QAEXC,QAAS,GAEXod,UAAW,CACTtd,KAAM,CAACC,OADE,QAETC,QAAS,GAEXqd,WAAY,CACVvd,KAAM,CAACC,OADG,QAEVC,QAAS,GAEXsd,SAAU,CACRxd,KAAM,CAACC,OADC,QAERC,QAAS,GAEXud,WAAY,CACVzd,KAAM,CAACC,OADG,QAEVC,QAAS,GAEXkZ,eA7BK,QA8BLrH,YA9BK,QA+BL2L,UAAW,CACT1d,KADS,OAETE,QAAS,MAEXyd,UAAW,CACT3d,KADS,OAETE,QAAS,MAEX0d,OAAQ,CACN5d,KAAM,CAACC,OADD,QAENC,QAAS,OAIbE,KAAM,iBAAO,CACXyd,UADW,EAEXC,UAFW,EAGXC,YAHW,KAIXC,gBAJW,EAKXC,WAAY,CACVtY,UAAW,CACTuY,IADS,EAET3B,KAFS,EAGT4B,OAHS,EAIT1B,MAJS,EAKT2B,MALS,EAMThS,OANS,EAOTiS,UAPS,EAQT3F,aARS,EAST4F,WAAY,GAEd5c,QAAS,CACPwc,IADO,EAEP3B,KAFO,EAGP4B,OAHO,EAIP1B,MAJO,EAKP2B,MALO,EAMPhS,OANO,EAOPiS,UAPO,EAQP3F,aAAc,IAGlB6F,gBA5BW,EA6BXC,WA7BW,EA8BXC,gBA9BW,EA+BXC,iBA/BW,EAgCXC,UAhCW,EAiCXC,YAjCW,EAkCXC,WAlCW,0BAmCXxd,eAAgB,IAGlBE,SAAU,CACRud,aADQ,WAEN,IAAMC,EAAIpe,KAAKsd,WAAf,UACMe,EAAIre,KAAKsd,WAAf,QACMgB,IAAiC,IAAhBte,KAAKsH,OAAmB8W,EAAxB,WAAuCA,EAAxC,OAAtB,EACM1B,EAAWlb,KAAA,IAAS4c,EAAT,MAAkBC,EAAnC,OACIzC,EAAJ,EAEA,GADAA,GAAQ5b,KAAK4b,KAAO0C,GAAiB5B,EAAW0B,EAAxC,OAAR,EACIpe,KAAJ,QAAkB,CAChB,IAAMyc,EAAWxR,MAAM3L,OAAOU,KAAb,WACboe,EADa,MAEb5c,KAAA,IAAS4c,EAAT,MAAkB9e,OAAOU,KAF7B,WAIA4b,GAAQ5b,KAAK4b,MAAL,EAAwBwC,EAAhC,MAKF,OAHIpe,KAAJ,YAAoB4b,GAAQzb,SAASH,KAAjB,YAChBA,KAAJ,aAAqB4b,GAAQzb,SAASH,KAAjB,aAErB,GAEFue,YApBQ,WAqBN,IAAMH,EAAIpe,KAAKsd,WAAf,UACMe,EAAIre,KAAKsd,WAAf,QACIC,EAAJ,EASA,OAPIvd,KAAJ,MAAcud,GAAOa,EAAA,OAAWC,EAAlB,SACd,IAAIre,KAAKsH,OAAkBiW,GAAOa,EAAlC,UACKb,GAAOa,EAAA,IAAQpe,KAAf,YACDA,KAAJ,UAAkBud,GAAOvd,KAAKud,KAAOa,EAAZ,OAAuBA,EAA9B,QACdpe,KAAJ,WAAmBud,GAAOpd,SAASH,KAAhB,WACfA,KAAJ,cAAsBud,GAAOpd,SAASH,KAAhB,cAEtB,GAEFwe,aAlCQ,WAmCN,QAASxe,KAAKoC,OAAP,aAA6BpC,KAAKiE,aAAlC,aAA8DjE,KAA9D,aAAkFA,KAAzF,iBAIJ2F,MAAO,CACLR,SADK,SACG,GACN7C,GAAOtC,KAAP,kBAEFW,SAJK,SAIG,GACFX,KAAJ,WAEAsC,EAAMtC,KAAH,eAAyBA,KAA5B,mBAEF+c,UATK,mBAULC,UAAW,oBAGbtV,YA1IiD,WA2I/C1H,KAAA,+BAAwBc,QAG1BjB,QAAS,CACP4e,iBADO,WAEL,MAAO,CACLf,UADK,EAELC,WAFK,EAGL5F,aAHK,EAILwF,IAAKvd,KAAKgd,WAAahd,KAJlB,UAKLwd,OAAQxd,KAAKgd,WAAahd,KALrB,UAML4b,KAAM5b,KAAK+c,WAAa/c,KANnB,UAOL8b,MAAO9b,KAAK+c,WAAa/c,KAPpB,UAQLyL,OARK,EASLgS,MAAO,IAGXiB,SAdO,aAePC,SAfO,SAeC,GACN,OAAO,gBAA8B,IAAhB3e,KAAKsH,OACtBtH,KADiB,aAEjBA,KAAK4e,cAAc5e,KAAnB,aAFJ,KAIF6e,QApBO,WAqBL,OAAO,gBAA8B,IAAhB7e,KAAKsH,OACtBtH,KADiB,YAEjBA,KAAK8e,cAAc9e,KAFvB,eAIF4e,cAzBO,SAyBM,KACX,IAAMG,EAAYnD,EAAA,EAAmB5b,KAAnB,UAAlB,GAQA,OALE4b,IADI5b,KAAD,MAAcA,KAAf,QAA8B+e,EAAlC,EACSvd,KAAA,IAASoa,EAAT,EAAP,GAEOpa,KAAA,MAAP,IAGKoa,EAAO5b,KAAd,iBAEF8e,cApCO,SAoCM,GACX,IAAME,EAAiBhf,KAAvB,iBACMif,EAAQjf,KAAKie,YAAnB,EACMjZ,EAAYhF,KAAKsd,WAAvB,UACM4B,EAAgBlf,KAAKsd,WAAWvc,QAAtC,OACMoe,EAAc5B,EAApB,EACM6B,EAAgBH,EANE,EAyBxB,OAfIG,GACFpf,KADE,gBAIFgF,EAAA,IAJF,EAMEuY,EAAMvd,KAAKie,aAAejZ,EAAA,IAD1B,GAGSoa,IAAkBpf,KAAtB,cACLud,EAAM0B,EAAA,EADyC,GAGtC1B,EAAMvd,KAAN,cAA2BA,KAA/B,gBACLud,EAAMvd,KAAKie,YAAX,IAGKV,EAAA,MAAP,GAEF8B,aA/DO,WAgEArf,KAAL,WAEAA,KAAA,YAEFsf,eApEO,WAqELtf,KAAA,mBAEAA,KAAA,cAEFuf,oBAzEO,WA0EDvf,KAAJ,YACEA,KAAA,YAAmBA,KAAKqd,eAAiB,EAAIrd,KAA7C,iBAGJwf,oBA9EO,WA+EL,QAAIxf,KAAKsH,OAAT,CACA,IAAIiD,EAAKvK,KAAT,eACA,QAAW,CACT,aAAIc,OAAA,6BAEF,YADAd,KAAA,mBAGFuK,EAAKA,EAAL,aAEFvK,KAAA,oBAEFyf,WA1FO,aA2FPhZ,sBA3FO,WA2Fc,WACbf,EAAY,kDAAlB,MAEMgF,EAAUhF,EAAhB,MAWA,OATAA,EAAA,MAAmB,SAAAzC,GACb,EAAJ,aACEyH,GAAWA,EAAX,GAGF,YAAiBzH,EAAjB,QACA,YAAiBA,EAAjB,SAGF,GAEFyc,eA3GO,WA4GL,OAAK1f,KAAL,UAEOc,OAAA,aACLS,SAAA,gBADF,aAF4B,GAK9Boe,cAjHO,WAkHL,OAAK3f,KAAL,UAEOc,OAAA,aACLS,SAAA,gBADF,WAF4B,GAK9Bqe,aAvHO,WAwHL,OAAK5f,KAAL,UAEOc,OAAA,aACLS,SAAA,gBADF,UAF4B,GAK9Bse,4BA7HO,SA6HoB,GACzB,IAAMC,EAAOvV,EAAb,wBACA,MAAO,CACLgT,IAAK/b,KAAA,MAAWse,EADX,KAELlE,KAAMpa,KAAA,MAAWse,EAFZ,MAGLtC,OAAQhc,KAAA,MAAWse,EAHd,QAILhE,MAAOta,KAAA,MAAWse,EAJb,OAKLrC,MAAOjc,KAAA,MAAWse,EALb,OAMLrU,OAAQjK,KAAA,MAAWse,EAAX,UAGZC,QAxIO,SAwIA,GACL,IAAKxV,IAAOvK,KAAZ,UAA4B,OAAO,KAEnC,IAAM8f,EAAO9f,KAAK6f,4BAHI,GAMtB,QAAI7f,KAAKsH,OAAkB,CACzB,IAAM0Y,EAAQlf,OAAA,iBAAd,GAEAgf,EAAA,KAAY3f,SAAS6f,EAArB,YACAF,EAAA,IAAW3f,SAAS6f,EAApB,WAGF,UAEFC,UAvJO,SAuJE,GAAgB,WACvBhI,uBAAsB,WACpB,IAAM1N,EAAK,QAAX,QAEKA,GAAL,SAAWA,EAAA,eAKXA,EAAA,6BACAlK,IACAkK,EAAA,sBANElK,QASN6f,gBArKO,WAqKQ,WACb,OAAO,IAAIC,SAAc,SAAAC,GAAO,OAAInI,uBAAsB,WACxD,kBAAuB,iBAAsB,EAA7C,SACAmI,WAGJC,iBA3KO,WA2KS,WACdrgB,KAAA,+BAAwBc,OACxBd,KAAA,sBACAA,KAAA,sBACAA,KAAA,UAAiBuB,SAAA,gBAAjB,YAEA,IAAM+b,EAAkB,CACtBtY,UAAW,kBAAKhF,KAAKsd,WAAWtY,WAChCjE,QAAS,kBAAKf,KAAKsd,WAAWvc,UAIhC,IAAKf,KAAD,cAAsBA,KAA1B,SACEsd,EAAA,UAAuBtd,KAAvB,uBACK,CACL,IAAMgF,EAAYhF,KAAlB,eACA,MAAgB,OAEhBsd,EAAA,UAAuBtd,KAAK+f,QAA5B,GACAzC,EAAA,qBAAkCtY,EAAlC,YACA,IAAIhF,KAAKsH,OAGPgW,EAAA,oBAAiCtY,EAAjC,UAEAsY,EAAA,sBAKJtd,KAAA,WAAe,WACb,kBAAuBsd,EAAA,QAAqB,UAAa,QAAzD,UAEA,sB,oFCrVF,EAAa,OAAA5P,EAAA,MAAO,EAAD,0CAAzB,QAYe,gBAAkB,CAC/BxO,KAD+B,SAG/BohB,QAH+B,WAI7B,MAAO,CACLC,UADK,EAGLC,MAAOxgB,KAAKwgB,QAIhB9T,WAAY,CACVlC,aAAA,OACAgS,OAAA,QAGFrd,MAAO,CACLshB,KADK,QAELxP,aAAc,CACZ5R,KADY,QAEZE,SAAS,GAEX2R,oBAAqB,CACnB7R,KADmB,QAEnBE,SAAS,GAEX4F,SAVK,QAWLgM,YAXK,QAYLE,UAAW,CACThS,KAAM,CAACC,OADE,QAETC,QAAS,QAEXmhB,QAhBK,QAiBLlI,QAjBK,QAkBLpH,YAAa,CACX/R,KADW,QAEXE,SAAS,GAEX8F,YAtBK,QAuBLsb,OAAQ,CACNthB,KADM,OAENE,QAAS,YAEXmZ,WAAY,CACVrZ,KAAM,CAAC2E,QADG,QAEVzE,QAAS,sBAIbE,KAjD+B,WAkD7B,MAAO,CACLmhB,kBADK,EAELC,cAFK,EAGLjD,gBAHK,EAILzF,WAJK,EAKL2I,cALK,EAMLzO,cANK,KAOL0O,MAAO,KAIXngB,SAAU,CACRsX,WADQ,WAEN,OAAOlY,KAAK+gB,MAAM/gB,KAAlB,YAEFghB,eAJQ,WAKN,IAAMC,EAAYzf,KAAA,IAASxB,KAAKsd,WAAWvc,QAAzB,MAAwCmK,WAAWlL,KAArE,qBAEA,OAAKA,KAAL,KAEO,eAAcA,KAAK4e,cAAc5e,KAAnB,eAAd,KAAP,IAFuBA,KAAK2e,SAASsC,IAArB,KAIlBC,oBAXQ,WAYN,IAAMzV,EAASzL,KAAKygB,KAAL,QAEX,eAAczgB,KAFlB,WAIA,OAAOyL,GAAP,KAEF0V,mBAlBQ,WAmBN,OAAO,eAAcnhB,KAAd,WAAP,KAEFohB,mBArBQ,WAsBN,GAAIphB,KAAJ,SACE,OAAO,eAAcA,KAAd,WAAP,IAGF,IAAM0c,EAAWlb,KAAA,IACfxB,KAAKsd,WAAWtY,UAAUyY,MAC1Bne,OAAOU,KADP,aAECA,KAAKygB,KAAO,GAHE,GAIfjf,KAAA,IAASxB,KAAKge,UAAd,GAJF,IAOMmD,EAAqBlW,MAAM9K,SAASH,KAAf,uBAEvBG,SAASH,KAFb,oBAIA,OAAO,eAAcwB,KAAA,MAAd,KAAP,KAKF6f,cA1CQ,WA2CN,IAAM9D,EAAOvd,KAAD,KAER,eAAcA,KAAK8e,cAAc9e,KAFrC,oBACIA,KADQ,UAIZ,OAAOud,GAAP,KAEF+D,kBAjDQ,WAkDN,OAAOtd,QAAQhE,KAAK+gB,MAAMve,MAAK,SAAAsM,GAAI,OAAIA,EAAA,UAAvC,OAEFyS,OApDQ,WAqDN,MAAO,CACLlQ,UAAWrR,KADN,oBAEL0c,SAAU1c,KAFL,mBAGLyc,SAAUzc,KAHL,mBAILud,IAAKvd,KAJA,cAKL4b,KAAM5b,KALD,eAMLwhB,gBAAiBxhB,KANZ,OAOLid,OAAQjd,KAAKid,QAAUjd,KAAKa,gBAKlC8E,MAAO,CACLhF,SADK,SACG,GACN,IAAUX,KAAKmY,WAAL,IAEZ4F,gBAJK,SAIU,GACb/d,KAAA,kBAEFmY,UAPK,SAOI,KACP,GAAIsJ,KAAQzhB,KAAZ,MAAwB,CACtB,IAAM8O,EAAO9O,KAAK+gB,MAAlB,GACAjS,EAAA,0CACA9O,KAAA,wBAA+B8O,EAAA,UAAiBA,EAAhD,aAGF4S,KAAQ1hB,KAAR,OACEA,KAAK+gB,MAAMW,GAAMC,UAAUC,OAD7B,8BAKJjI,QAjJ+B,WAmJzB3Z,KAAKmc,OAAO0F,eAAhB,eACE,eAAQ,aAAR,OAIJjc,QAxJ+B,WAyJ7B5F,KAAA,UAAiBA,KAAjB,gBAGFH,QAAS,CACP6e,SADO,WACC,WAGN1e,KAHM,mBAKNiY,uBAAsB,WAEpB,0BAA4B,WACtB,QAAJ,UACE,oBAAyB,EAAzB,cACA,SAAc,0BAA+B,EAA7C,8BAKR6J,mBAhBO,WAiBL,IAAMtN,EAAMxU,KAAKgB,MAAjB,QACMkX,EAAa1D,EAAA,cAAnB,wBACMuN,EAAevN,EAAA,aAAmBA,EAAxC,aAEA,OAAO0D,EACH1W,KAAA,MAAuBA,KAAA,MAAY0W,EAAA,UAAuB1D,EAAA,aAAvB,EAA8C0D,EAAA,aADpE,IAEb1D,EAFJ,WAIFwN,aAzBO,WA0BL,OAAO7hB,SAASH,KAAKsd,WAAWtY,UAAU4W,KAA1C,EAAiD5b,KAAK6gB,gBAExDoB,YA5BO,WA6BL,IAAMzN,EAAMxU,KAAKgB,MAAjB,QACMkX,EAAa1D,EAAA,cAAnB,wBAMA,GAJA,IACExU,KAAA,oBAGEA,KAAKwY,UAAT,EACE,OAAOxY,KAAP,YAGFA,KAAA,cAAqB2H,MAAA,KAAW3H,KAAX,eAArB,GAEA,IAAMkiB,EAA0BhK,EAAA,UAAuBlY,KAAvD,qBACMmiB,EAAsB3N,EAAA,8BAA5B,UAEA,OAAOxU,KAAKue,YAAc2D,EAA0BC,EAApD,GAEFC,gBA/CO,SA+CQ,GAIb,GAFApiB,KAAA,WAEKA,KAAD,UAAmBA,KAAvB,kBAEO,GAAIiD,EAAA,UAAc,OAAlB,KAGA,GAAIA,EAAA,UAAc,OAAlB,KACLjD,KAAA,gBACK,GAAIiD,EAAA,UAAc,OAAlB,GACLjD,KAAA,eACK,IAAIiD,EAAA,UAAc,OAAd,QAAJ,IAAoCjD,KAAKmY,UAEvC,OADPnY,KAAA,MAAWA,KAAX,mBAGFiD,EAAA,sBAVEjD,KAAA,aAYJ6S,iBAlEO,SAkES,GACd,IAAMlM,EAAS1D,EAAf,OAEA,OAAOjD,KAAKW,WACTX,KADI,cAELA,KAFK,eAGJA,KAAKgB,MAAMD,QAAQwT,SAHtB,IAKFjO,uBA1EO,WA2EL,IAAM+b,EAAa,mDAAnB,MAEA,OAAIriB,KAAKkY,YAAclY,KAAKkY,WAA5B,GACE,iCAAO,GAAP,IAEE,wBAAyBlY,KAAKkY,WAAW/H,KAI7C,GAEF1J,sBAtFO,WAuFL,IAAMf,EAAY,6CAAlB,MAMA,OAJK1F,KAAL,cACE0F,EAAA,QAAoB1F,KAApB,WAGF,GAEFsiB,cA/FO,WAgGL,IAAMvhB,EAAUf,KAAhB,aAEA,OAAKA,KAAL,WAEOA,KAAKgP,eAAe,aAAc,CACvC7P,MAAO,CACLD,KAAMc,KAAK0Y,aAEZ,CAJH,IAF6B3X,GAQ/BwhB,cA1GO,WA0GM,WACL7V,EAA+B,CAAC,CACpCxN,KADoC,OAEpC0E,MAAO5D,KAAK+d,kBAed,OAXK/d,KAAD,aAAqBA,KAAzB,cACE0M,EAAA,KAAgB,CACdxN,KADc,gBAEd0E,MAAO,CACLwG,QAAS,WAAQ,eACjByI,iBAAkB7S,KAFb,iBAGLwiB,QAAS,kBAAO,EAAD,KAAN,sBAAoB,EAAd,iCAKrB,GAEFxG,WA9HO,WA8HG,WACFM,EAAU,CACdjW,MAAO,iCACFrG,KADE,mBAAF,IAEHuG,KAAM,SAAUvG,KAAV,OAAwBA,KAAKmc,OAA7B,KAA2C,SAEnDlP,YALc,kBAMdO,MAAO,gDACFxN,KADE,kBAEFA,KAFE,gBAAF,mBAGH,wBAAyBA,KAHpB,KAIL,yBAA0BA,KAJrB,eAKLyiB,0BAA2BziB,KALtB,UAMJA,KAAKuH,aAAN,QAA4B,IAE9ByY,MAAOhgB,KAdO,OAed0M,WAAY1M,KAfE,gBAgBdyW,IAhBc,UAiBdrQ,GAAI,CACFqH,MAAQ,SAAAxK,GACN,IAAM0D,EAAS1D,EAAf,OAEI0D,EAAA,aAAJ,aACI,EAAJ,sBAA8B,gBAEhC+b,QAAS1iB,KAAKoD,YAmBlB,OAfIpD,KAAK6N,WAAT,SACEyO,EAAA,GAAaA,EAAA,IAAb,GACAA,EAAA,UAAoBtc,KAAK6N,WAAzB,SAGG7N,KAAD,UAAkBA,KAAtB,cACEsc,EAAA,GAAaA,EAAA,IAAb,GACAA,EAAA,cAAwBtc,KAAxB,mBAGEA,KAAJ,cACEsc,EAAA,GAAaA,EAAA,IAAb,GACAA,EAAA,cAAwBtc,KAAxB,mBAGKA,KAAKgP,eAAe,MAAOsN,EAAStc,KAA3C,mBAEF2iB,SA5KO,WA6KA3iB,KAAKgB,MAAV,UAEAhB,KAAA,MAAa2H,MAAA,KAAW3H,KAAKgB,MAAMD,QAAQ6hB,iBAA3C,mBAEFC,kBAjLO,WAiLU,WACf7iB,KAAA,iBAAsB,WAChB,EAAJ,iBAEA,oBACA,mBAGJ8iB,kBAzLO,SAyLU,GAAe,WAE9B9iB,KAAA,kBAAuB,WACjB,yBAA4BiD,EAAhC,gBAEAgV,uBAAsB,WACpB,cACA,0BAIN8K,SApMO,WAqML,IAAMjU,EAAO9O,KAAK+gB,MAAM/gB,KAAKmY,UAA7B,GAEA,MAAW,CACT,IAAKnY,KAAK+gB,MAAV,OAAwB,OAKxB,OAHA/gB,KAAA,kBACAA,KAAA,WAKFA,KAAA,aACA,IAAI8O,EAAA,UAAsB9O,KAAK+iB,YAEjCC,SAnNO,WAoNL,IAAMlU,EAAO9O,KAAK+gB,MAAM/gB,KAAKmY,UAA7B,GAEA,MAAW,CACT,IAAKnY,KAAK+gB,MAAV,OAAwB,OAKxB,OAHA/gB,KAAA,UAAiBA,KAAK+gB,MAAtB,YACA/gB,KAAA,WAKFA,KAAA,aACA,IAAI8O,EAAA,UAAsB9O,KAAKgjB,YAEjC5f,UAlOO,SAkOE,GAAkB,WACzB,GAAIH,EAAA,UAAc,OAAlB,IAAgC,CAE9B7C,YAAW,WAAQ,iBACnB,IAAM4E,EAAYhF,KAAlB,eACAA,KAAA,WAAe,kBAAMgF,GAAaA,EAAlC,gBAEChF,KAAD,UACA,CAAC,OAAD,GAAc,OAAd,eAAsCiD,EAFjC,WAILjD,KAAA,aAIFA,KAAA,WAAe,kBAAM,kBAArB,OAEFijB,SAlPO,WAmPAjjB,KAAL,WAKAA,KAAA,0BACAA,KAPM,mBAcND,aAAaC,KAAb,eACAA,KAAA,cAAqBc,OAAA,WAAkBd,KAAlB,iBAArB,QAIJ6E,OAja+B,SAiazB,GAAG,WACDpF,EAAO,CACXwN,YADW,SAEXO,MAAO,CACL,mBACkB,KAAhBxN,KAAKsH,SAAL,IACAtH,KAAKsH,QACW,WAAhBtH,KAAKsH,QAEToF,WAAY,CAAC,CACXwW,IADW,MAEXhkB,KAFW,SAGX0E,MAAO5D,KAAKijB,YAIhB,OAAOjW,EAAE,MAAOvN,EAAM,EACnBO,KAAD,WAAmBA,KADC,eAEpBA,KAAKmjB,iBAAgB,iBAAM,CACzB,wBAAoC,CAClChkB,MAAO,CACLwF,MADK,EAEL2I,MAAO,EAFF,MAGLD,KAAM,EAAKA,OAEZ,CAAC,EATR,4B,kCC7dJ,gBAGe,2BAAW,CACxBnO,KADwB,aAGxBC,MAAO,CACLikB,YAAa,MAGf3jB,KAAM,iBAAO,CACXkB,UADW,EAEX0iB,cAAe,OAGjB1d,MAAO,CACLhF,SADK,SACG,GACN,EACEX,KAAA,cAAqBA,KAArB,YAEAA,KAAA,4BAAkCA,KAAlC,iBAKNH,QAAS,CACPyjB,KADO,SACH,GAAY,WACdtjB,KAAA,gBACAI,YAAW,WACT,sB","file":"static/js/article~createArticle.b69c8217.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array as PropType<string[]>,\n      default: () => ([]),\n    },\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n\n      // If search is not dirty and is\n      // using slot, do nothing\n      if (isUsingSlot && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot\n      // to avoid a double input\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData!.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: Event) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: ((e: Event) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): void {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value!.handler\n\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || isActive(e) === false) return\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if (('isTrusted' in e && !e.isTrusted) ||\n    ('pointerType' in e && !e.pointerType)\n  ) return\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  !elements.some(el => el.contains(e.target as Node)) && setTimeout(() => {\n    isActive(e) && handler && handler(e)\n  }, 0)\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app.addEventListener('click', onClick, true)\n    el._clickOutside = onClick\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true)\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: classes,\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), children)\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n"],"sourceRoot":""}