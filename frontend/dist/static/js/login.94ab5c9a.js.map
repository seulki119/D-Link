{"version":3,"sources":["webpack:///../../../src/components/VAlert/VAlert.ts","webpack:///../../../src/components/VGrid/VRow.ts","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/components/VGrid/grid.ts"],"names":["name","props","border","type","validator","closeLabel","default","coloredBorder","dense","dismissible","closeIcon","icon","Boolean","val","outlined","prominent","text","value","computed","__cachedBorder","this","data","staticClass","class","setBackgroundColor","$createElement","__cachedDismissible","color","small","attrs","$vuetify","lang","t","on","click","__cachedIcon","iconColor","classes","computedColor","computedIcon","includes","hasColoredIcon","hasText","isDark","created","$attrs","hasOwnProperty","methods","genWrapper","children","$slots","prepend","$scopedSlots","close","toggle","genContent","genAlert","role","style","directives","isActive","setColor","render","h","origin","mode","breakpoints","ALIGNMENT","makeProps","prefix","def","alignValidator","str","alignProps","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","breakpoint","prop","cache","functional","tag","noGutters","cacheKey","String","classList","id","fluid","key","Array"],"mappings":"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","file":"static/js/login.94ab5c9a.js","sourcesContent":["// Styles\nimport './VAlert.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNodeData } from 'vue'\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Toggleable,\n  Transitionable\n).extend({\n  name: 'v-alert',\n\n  props: {\n    border: {\n      type: String,\n      validator (val: string) {\n        return [\n          'top',\n          'right',\n          'bottom',\n          'left',\n        ].includes(val)\n      },\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    coloredBorder: Boolean,\n    dense: Boolean,\n    dismissible: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$cancel',\n    },\n    icon: {\n      default: '',\n      type: [Boolean, String],\n      validator (val: boolean | string) {\n        return typeof val === 'string' || val === false\n      },\n    },\n    outlined: Boolean,\n    prominent: Boolean,\n    text: Boolean,\n    type: {\n      type: String,\n      validator (val: string) {\n        return [\n          'info',\n          'error',\n          'success',\n          'warning',\n        ].includes(val)\n      },\n    },\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    __cachedBorder (): VNode | null {\n      if (!this.border) return null\n\n      let data: VNodeData = {\n        staticClass: 'v-alert__border',\n        class: {\n          [`v-alert__border--${this.border}`]: true,\n        },\n      }\n\n      if (this.coloredBorder) {\n        data = this.setBackgroundColor(this.computedColor, data)\n        data.class['v-alert__border--has-color'] = true\n      }\n\n      return this.$createElement('div', data)\n    },\n    __cachedDismissible (): VNode | null {\n      if (!this.dismissible) return null\n\n      const color = this.iconColor\n\n      return this.$createElement(VBtn, {\n        staticClass: 'v-alert__dismissible',\n        props: {\n          color,\n          icon: true,\n          small: true,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: () => (this.isActive = false),\n        },\n      }, [\n        this.$createElement(VIcon, {\n          props: { color },\n        }, this.closeIcon),\n      ])\n    },\n    __cachedIcon (): VNode | null {\n      if (!this.computedIcon) return null\n\n      return this.$createElement(VIcon, {\n        staticClass: 'v-alert__icon',\n        props: { color: this.iconColor },\n      }, this.computedIcon)\n    },\n    classes (): object {\n      const classes: Record<string, boolean> = {\n        ...VSheet.options.computed.classes.call(this),\n        'v-alert--border': Boolean(this.border),\n        'v-alert--dense': this.dense,\n        'v-alert--outlined': this.outlined,\n        'v-alert--prominent': this.prominent,\n        'v-alert--text': this.text,\n      }\n\n      if (this.border) {\n        classes[`v-alert--border-${this.border}`] = true\n      }\n\n      return classes\n    },\n    computedColor (): string {\n      return this.color || this.type\n    },\n    computedIcon (): string | boolean {\n      if (this.icon === false) return false\n      if (typeof this.icon === 'string' && this.icon) return this.icon\n      if (!['error', 'info', 'success', 'warning'].includes(this.type)) return false\n\n      return `$${this.type}`\n    },\n    hasColoredIcon (): boolean {\n      return (\n        this.hasText ||\n        (Boolean(this.border) && this.coloredBorder)\n      )\n    },\n    hasText (): boolean {\n      return this.text || this.outlined\n    },\n    iconColor (): string | undefined {\n      return this.hasColoredIcon ? this.computedColor : undefined\n    },\n    isDark (): boolean {\n      if (\n        this.type &&\n        !this.coloredBorder &&\n        !this.outlined\n      ) return true\n\n      return Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('outline')) {\n      breaking('outline', 'outlined', this)\n    }\n  },\n\n  methods: {\n    genWrapper (): VNode {\n      const children = [\n        this.$slots.prepend || this.__cachedIcon,\n        this.genContent(),\n        this.__cachedBorder,\n        this.$slots.append,\n        this.$scopedSlots.close\n          ? this.$scopedSlots.close({ toggle: this.toggle })\n          : this.__cachedDismissible,\n      ]\n\n      const data: VNodeData = {\n        staticClass: 'v-alert__wrapper',\n      }\n\n      return this.$createElement('div', data, children)\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-alert__content',\n      }, this.$slots.default)\n    },\n    genAlert (): VNode {\n      let data: VNodeData = {\n        staticClass: 'v-alert',\n        attrs: {\n          role: 'alert',\n        },\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }\n\n      if (!this.coloredBorder) {\n        const setColor = this.hasText ? this.setTextColor : this.setBackgroundColor\n        data = setColor(this.computedColor, data)\n      }\n\n      return this.$createElement('div', data, [this.genWrapper()])\n    },\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (h): VNode {\n    const render = this.genAlert()\n\n    if (!this.transition) return render\n\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode,\n      },\n    }, [render])\n  },\n})\n","import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n"],"sourceRoot":""}